do local v0=tonumber;local v1=string.byte;local v2=string.char;local v3=string.sub;local v4=string.gsub;local v5=string.rep;local v6=table.concat;local v7=table.insert;local v8=math.ldexp;local v9=getfenv or function()return _ENV;end ;local v10=setmetatable;local v11=pcall;local v12=select;local v13=unpack or table.unpack ;local v14=tonumber;local function v15(v16,v17,...)local v18=1;local v19;v16=v4(v3(v16,5),"..",function(v20)if (v1(v20,2)==79) then v19=v0(v3(v20,1,1));return "";else local v70=v2(v0(v20,16));if v19 then local v86=v5(v70,v19);v19=nil;return v86;else return v70;end end end);local function v21(v22,v23,v24)if v24 then local v71=(v22/((1 + 1)^(v23-(1 + (1621 -(1297 + 324))))))%((1672 -(1309 + 361))^(((v24-(1 + 0)) -(v23-(1 + 0 + 0))) + (2 -1))) ;return v71-(v71%(1 + 0)) ;else local v72=(2 + 0)^(v23-(1665 -(888 + 138 + 638))) ;return (((v22%(v72 + v72))>=v72) and (1 + 0)) or ((1361 -(45 + 73)) -(1228 + 15)) ;end end local function v25()local v38=v1(v16,v18,v18);v18=v18 + 1 ;return v38;end local function v26()local v39,v40=v1(v16,v18,v18 + (950 -(94 + 854)) );v18=v18 + 1 + 1 ;return (v40 * (18 + 238)) + v39 ;end local function v27()local v41,v42,v43,v44=v1(v16,v18,v18 + (532 -(502 + 16 + 11)) );v18=v18 + (2002 -(1313 + 685)) ;return (v44 * (7826632 + 8950584)) + (v43 * 65536) + (v42 * 256) + v41 ;end local function v28()local v45=v27();local v46=v27();local v47=1;local v48=(v21(v46,1 -0 ,38 -(57 -39) ) * ((4 -2)^(27 + 5))) + v45 ;local v49=v21(v46,5 + 2 + 14 ,(1159 -(47 + 1064)) -17 );local v50=((v21(v46,88 -56 )==(1308 -(332 + 975))) and  -(70 -(4 + 29 + 36))) or (1 -0) ;if (v49==(0 + 0)) then if (v48==(0 -0)) then return v50 * (0 -0) ;else v49=1;v47=0 + 0 ;end elseif (v49==2047) then return ((v48==((4567 -3321) -(882 + 364))) and (v50 * (1/(0 -0)))) or (v50 * NaN) ;end return v8(v50,v49-1023 ) * (v47 + (v48/((3 -(596 -(378 + 217)))^((550 -(112 + 8)) -(209 + 169))))) ;end local function v29(v30)local v51=1912 -(391 + 1521) ;local v52;local v53;while true do if ((1 + 1 + 0)==v51) then v53={};for v87=1, #v52 do v53[v87]=v2(v1(v3(v52,v87,v87)));end v51=2 + 1 ;end if (v51==(0 -0)) then v52=nil;if  not v30 then v30=v27();if (v30==(0 + (1128 -(79 + 1049)))) then return "";end end v51=1170 -(1159 + 10) ;end if (v51==(1988 -(751 + 1236))) then v52=v3(v16,v18,(v18 + v30) -((1 -0) + 0) );v18=v18 + v30 ;v51=2;end if (v51==(133 -(114 + 16))) then return v6(v53);end end end local v31=v27;local function v32(...)return {...},v12("#",...);end local function v33()local v54=0;local v55;local v56;local v57;local v58;local v59;local v60;local v61;while true do if (v54==(1221 -(1200 + 21))) then v55=1623 -(261 + 1362) ;v56=nil;v54=1 + 0 ;end if (v54~=(6 -3)) then else v61=nil;while true do local v89=0;while true do if (v89==(974 -(682 + 291))) then if (v55~=(1708 -(13 + 1693))) then else for v99=1359 -(626 + 732) ,v27() do local v100=1248 -(209 + 1039) ;local v101;while true do if (v100==0) then v101=v25();if (v21(v101,1,758 -(22 + 735) )~=0) then else local v106=0 -0 ;local v107;local v108;local v109;local v110;while true do if (v106~=1) then else local v159=0;local v160;while true do if (v159==(502 -(99 + 403))) then v160=0 + 0 ;while true do if (v160==1) then v106=2;break;end if (v160~=0) then else local v268=0 -0 ;while true do if (v268==(0 + 0)) then v109=nil;v110=nil;v268=1 + 0 ;end if (v268~=1) then else v160=1704 -(1403 + 300) ;break;end end end end break;end end end if (2==v106) then while true do if (v107==1) then local v243=350 -(334 + 16) ;local v244;local v245;while true do if (v243==1) then while true do if (v244~=(0 -0)) then else v245=0 -0 ;while true do if (v245==0) then local v354=0 -0 ;while true do if (v354==0) then v110={v26(),v26(),nil,nil};if (v108==0) then local v387=0 + 0 ;local v388;while true do if (v387==(0 + 0)) then v388=0;while true do if (v388~=0) then else v110[1824 -(1585 + 236) ]=v26();v110[4]=v26();break;end end break;end end elseif (v108==1) then v110[3]=v27();elseif (v108==2) then v110[3]=v27() -(2^16) ;elseif (v108~=3) then else local v403=0;local v404;while true do if (v403~=(0 -0)) then else v404=0;while true do if (v404~=(0 -0)) then else v110[3]=v27() -(2^(27 -11)) ;v110[1 + 3 ]=v26();break;end end break;end end end v354=1;end if (v354==(1084 -(647 + 436))) then v245=1;break;end end end if ((1 + 0)==v245) then v107=2;break;end end break;end end break;end if (v243~=(1329 -(1112 + 217))) then else v244=262 -(61 + 201) ;v245=nil;v243=1;end end end if (v107~=(3 + 0)) then else if (v21(v109,2 + 1 ,2 + 1 )~=1) then else v110[4]=v61[v110[4]];end v56[v99]=v110;break;end if (v107==0) then local v247=0 + 0 ;while true do if (v247==(367 -(352 + 15))) then v108=v21(v101,2,3);v109=v21(v101,4 + 0 ,6);v247=1;end if (v247==1) then v107=1;break;end end end if (v107~=2) then else local v248=1609 -(341 + 1268) ;while true do if ((1 -0)~=v248) then else v107=3;break;end if (v248~=0) then else if (v21(v109,1,2 -1 )~=(191 -(180 + 10))) then else v110[2]=v61[v110[2]];end if (v21(v109,2,6 -4 )~=1) then else v110[3]=v61[v110[3]];end v248=1 -0 ;end end end end break;end if (v106~=(0 + 0)) then else v107=0;v108=nil;v106=1 + 0 ;end end end break;end end end for v102=461 -(457 + 3) ,v27() do v57[v102-(1 -0) ]=v33();end for v104=1 + 0 ,v27() do v58[v104]=v27();end return v59;end break;end if (v89~=(404 -(256 + 148))) then else if (0~=v55) then else local v96=0;while true do if (v96==2) then v55=1 + 0 ;break;end if (v96~=(348 -(172 + 176))) then else v56={};v57={};v96=3 -2 ;end if (v96==(1 + 0)) then v58={};v59={v56,v57,nil,v58};v96=3 -1 ;end end end if (v55~=(1 + 0)) then else local v97=0;local v98;while true do if (v97==0) then v98=0 + 0 ;while true do if ((0 + 0)~=v98) then else v60=v27();v61={};v98=1;end if (v98==(1 + 1)) then v55=2;break;end if (v98~=1) then else local v111=0;while true do if (v111==(864 -(751 + 112))) then v98=2;break;end if (v111~=(0 -0)) then else for v223=1 + 0 ,v60 do local v224=0;local v225;local v226;local v227;local v228;local v229;while true do if (v224==(1 + 0)) then v227=nil;v228=nil;v224=63 -(47 + 14) ;end if (2==v224) then v229=nil;while true do if (v225~=0) then else local v288=0 -0 ;while true do if (v288==1) then v225=1405 -(557 + 847) ;break;end if ((0 + 0)==v288) then v226=0 -0 ;v227=nil;v288=1;end end end if (v225~=1) then else local v289=0 -0 ;while true do if (v289~=1) then else v225=2;break;end if (v289==0) then v228=nil;v229=nil;v289=3 -2 ;end end end if (v225~=2) then else while true do if (v226~=(1 -0)) then else v229=nil;while true do if (v227==0) then local v356=0;local v357;while true do if (v356~=0) then else v357=0;while true do if (v357==(1704 -(862 + 842))) then local v399=0;while true do if (v399==(954 -(232 + 721))) then v357=2 -1 ;break;end if ((0 -0)==v399) then v228=v25();v229=nil;v399=2 -1 ;end end end if (v357~=(60 -(58 + 1))) then else v227=1;break;end end break;end end end if (v227==(1 -0)) then if (v228==1) then v229=v25()~=(0 -0) ;elseif (v228==(2 + 0)) then v229=v28();elseif (v228~=3) then else v229=v29();end v61[v223]=v229;break;end end break;end if (v226~=0) then else local v337=0;while true do if (v337~=(1 -0)) then else v226=1 + 0 ;break;end if (0==v337) then local v359=0;while true do if (v359==1) then v337=1;break;end if (v359==0) then v227=0 + 0 ;v228=nil;v359=1;end end end end end end break;end end break;end if (v224~=0) then else v225=0;v226=nil;v224=1;end end end v59[1878 -(149 + 1726) ]=v25();v111=4 -3 ;end end end end break;end end end v89=762 -(155 + 606) ;end end end break;end if (v54==(1 + 0)) then v57=nil;v58=nil;v54=1157 -(1011 + 144) ;end if (v54~=(2000 -(573 + 1425))) then else v59=nil;v60=nil;v54=2 + 1 ;end end end local function v34(v35,v36,v37)local v62=v35[1];local v63=v35[2];local v64=v35[3];return function(...)local v65=1;local v66= -1;local v67={...};local v68=v12("#",...) -1 ;local function v69()local v73=v62;local v74=v63;local v75=v64;local v76=v32;local v77={};local v78={};local v79={};for v83=39 -(16 + (48 -25)) ,v68 do if ((v83>=v75) or ((11417 -7242)<(17646 -13565))) then v77[v83-v75 ]=v67[v83 + (3 -2) ];else v79[v83]=v67[v83 + (2 -1) ];end end local v80=(v68-v75) + (1250 -(392 + 857)) ;local v81;local v82;while true do local v84=0 -0 ;while true do if (((527 + 486)<((462 + 3217) -(323 + (1278 -775)))) and (v84==(0 + (1811 -(1006 + 805))))) then v81=v73[v65];v82=v81[1 + 0 ];v84=1 -0 ;end if ((v84==(1 + 0)) or ((10877 -8349)==(9888 -7847))) then if ((v82<=(336 -(267 + 48))) or ((4123 -1651)>=(3472 + 804))) then if ((v82<=(8 + 2)) or ((5197 -3133)>(12127 -7661))) then if ((((7626 -4249) -(760 + 344))<=(950 + 1283 + 736)) and (v82<=(6 -2))) then if ((v82<=(533 -(208 + 324))) or ((2356 -(280 + 546))<(4436 -3099))) then if (((648 -(15 + 71))>=(525 -(22 + 21))) and (v82>(0 + (0 -0)))) then local v112=67 -(41 + 26) ;local v113;local v114;local v115;local v116;local v117;while true do if (((1942 + 1757)>(1091 + 1598)) and (v112==(0 + 0))) then v113=0 -0 ;v114=nil;v112=438 -(80 + 357) ;end if (((87 + 41)<(531 + 235)) and (v112==(1 + 1))) then v117=nil;while true do if ((v113==1) or ((4606 + 185)<=(696 + 2994))) then local v252=0;while true do if ((v252==(0 + 0)) or ((333 + 221)<=(167 -106))) then v116=nil;v117=nil;v252=1711 -(1628 + 82) ;end if (((1 + 0)==v252) or ((820 + 3604)<(832 -531))) then v113=1725 -(233 + 1490) ;break;end end end if (((2395 -((1096 -(51 + 897)) + 236))<(2497 + 1398)) and (v113==(3 -1))) then while true do if ((v114==1) or ((2516 + 0)>(3336 + 1450))) then v117=0 -0 ;for v324=v115,v81[4 -0 ] do local v325=0;while true do if ((v325==(1835 -(426 + 1409))) or ((12122 -7554)==(1612 + 1978))) then v117=v117 + 1 + 0 ;v79[v324]=v116[v117];break;end end end break;end if (((1364 -(450 + 713))<=(17621 -13867)) and (v114==(1428 -(1178 + 250)))) then local v290=0 -0 ;local v291;while true do if (((1349 + 1266)<=(952 + 2698)) and (v290==(0 -0))) then v291=0 -0 ;while true do if ((v291==(84 -((103 -40) + 20))) or ((224 + 349)>=(1115 + 619))) then v114=1 + 0 ;break;end if ((v291==(1205 -(1050 + 155))) or (((7497 -5010) + 778)==(9538 -5023))) then v115=v81[902 -(251 + 649) ];v116={v79[v115](v13(v79,v115 + (2 -1) ,v66))};v291=(1061 -(756 + 304)) -0 ;end end break;end end end end break;end if ((v113==(1059 -(668 + 391))) or ((3461 -(798 + 663))<=((1596 -414) -(37 + 759)))) then local v253=0 + 0 ;while true do if ((v253==(1 -0)) or (1461>=(3287 -(30 + 95 + 2)))) then v113=505 -((530 -280) + 254) ;break;end if (((416 + 1414)<=(82 + 504 + 3976)) and ((0 -0)==v253)) then v114=0 -0 ;v115=nil;v253=613 -(192 + 420) ;end end end end break;end if ((v112==(310 -(227 + 82))) or (((29868 -19376) -7589)<(4427 -2956))) then v115=nil;v116=nil;v112=1520 -(1490 + 28) ;end end else local v118=989 -(775 + 214) ;local v119;local v120;while true do if ((v118==(1324 -(556 + (1536 -769)))) or (((2008 -1136) + (4231 -(175 + 32)))==(794 + 2973))) then while true do if ((v119==(0 -0)) or ((3975 -(74 + 38))==(53 + 2448))) then v120=v81[8 -6 ];v79[v120](v79[v120 + (251 -(128 + 122)) ]);break;end end break;end if (((15652 -11182)<=(4541 -(26 + 12))) and (v118==(0 -0))) then v119=0 -0 ;v120=nil;v118=25 -(9 + 15) ;end end end elseif (((749 -(655 + 13))<=(19923 -15393)) and (v82<=((2 -1) + 1))) then if (v79[v81[2]] or ((915 + 1118)>(17643 -13755))) then v65=v65 + 1 + 0 ;else v65=v81[867 -(232 + 632) ];end elseif (((3145 -(937 + 895))==(632 + 681)) and (v82>(1377 -(1306 + 68)))) then local v163=804 -(637 + 167) ;local v164;while true do if ((v163==(0 -0)) or (((6773 -(453 + 1535)) -1349)<=((10560 -7039) -(1269 + 359)))) then v164=v79[v81[2 + 2 ]];if (((4921 -(277 + 67))>(2334 + 1743)) and  not v164) then v65=v65 + (2 -1) ;else local v265=0 -(139 -(33 + 106)) ;local v266;while true do if (((3263 -(168 + 773))<=(3461 + (2564 -(868 + 1109)))) and (v265==0)) then v266=792 -(519 + 273) ;while true do if (((0 + 0)==v266) or ((2845 -((568 -403) + (2136 -795)))>((17116 -(1151 + 76)) -12097))) then v79[v81[7 -(8 -3) ]]=v164;v65=v81[2 + 1 ];break;end end break;end end end break;end end else v79[v81[(102 -61) -(24 + 15) ]]=v79[v81[1 + 2 ]][v81[1 + 1 + 2 ]];end elseif (((12099 -7732)>=(7985 -5403)) and (v82<=7)) then if (((5348 -2523)>=(2676 -((461 -188) + 11))) and (v82<=(1 + 4))) then local v121=0 -0 ;local v122;local v123;local v124;local v125;local v126;while true do if ((v121==(982 -(41 + 941))) or ((1120 -(216 + 740))>=(155 + 1209))) then v122=0 + 0 ;v123=nil;v121=1 + 0 ;end if ((v121==(980 -(863 + 115))) or ((4663 -(15 + 12))<(9182 -(5799 -(37 + 116))))) then v126=nil;while true do if (((386 + 1492)<=(1637 + 946)) and (v122==(1115 -(568 + 545)))) then while true do if ((v123==((0 + 0) -0)) or ((160 + 79)>=(5389 -(4718 -(1019 + 265))))) then local v292=0 + 0 ;local v293;while true do if ((v292==(0 -0)) or ((3223 -(840 + 872))>(2923 + 169))) then v293=0 -0 ;while true do if ((v293==(0 + 0)) or ((6665 -(699 + (3265 -2285)))<3089)) then local v361=0 -0 ;while true do if (((2133 + 2436)==(6442 -(560 + (1530 -(214 + 3))))) and (v361==(0 -0))) then v124=v81[4 -(3 -1) ];v125=v79[v124 + (2 -0) ];v361=684 -(672 + 11) ;end if (((1310 + 589)<=(6968 -2762)) and (((1 -0) -0)==v361)) then v293=2 -(3 -2) ;break;end end end if (((5279 -2897)>=(1854 -(24 + 11))) and (v293==(3 -2))) then v123=1603 -(331 + 1271) ;break;end end break;end end end if ((v123==(1158 -(590 + 566))) or ((4140 -(617 + 174))<(1256 -336))) then if (((266 + 358)<(4396 -(685 + 566))) and (v125>(0 + 0 + 0 + 0))) then if ((v126<=v79[v124 + (1077 -(33 + 1043)) ]) or ((863 + 1008)>=(3358 + 519))) then local v351=245 -(198 + 47) ;local v352;while true do if (((90 + 232)<3803) and ((1528 -(142 + 1386))==v351)) then v352=(214 + 1573) -(552 + 1235) ;while true do if ((((254 + 10092) -7070)==(1910 + 1366)) and (v352==(0 -0))) then v65=v81[504 -(250 + (589 -338)) ];v79[v124 + (4 -1) ]=v126;break;end end break;end end end elseif ((v126>=v79[v124 + ((2109 -881) -(579 + 648)) ]) or ((3838 + 510)<=1020)) then local v353=130 -(67 + 63) ;while true do if ((v353==(1182 -(205 + 977))) or ((2016 + 287)>((5984 -(783 + 194)) -(838 + 433)))) then v65=v81[8 -5 ];v79[v124 + (768 -(108 + 657)) ]=v126;break;end end end break;end if (((1978 + 2432)>(3058 + 4 + 44)) and (v123==(1 + 0))) then local v294=0 -(0 + 0) ;while true do if ((v294==((0 -0) + 0)) or ((16690 -12821)>=(986 + 3572))) then local v338=688 -(272 + 416) ;while true do if ((v338==((144 -(21 + 123)) -0)) or ((7295 -2592)<=(2008 -1252))) then v126=v79[v124] + v125 ;v79[v124]=v126;v338=426 -((277 -(15 + 14)) + (1332 -(1099 + 56))) ;end if (((402 + 2722)>(2012 -(48 + 985))) and (v338==(493 -(229 + 263)))) then v294=3 -2 ;break;end end end if ((v294==(2 -(1717 -(1284 + 432)))) or ((2236 -(304 + 368))==(2423 -1268))) then v123=1 + 1 ;break;end end end end break;end if ((((1111 -429) -(311 + 247))<((3155 -(391 + 131)) + 145)) and (v122==(0 + 0))) then local v255=0;while true do if ((v255==(113 -(53 + 59))) or ((2543 + 1565)==(2133 -(20 + 59)))) then v122=1038 -(747 + 290) ;break;end if ((v255==(0 + 0)) or ((579 + 485)<((5430 -4228) -(72 + (1382 -(501 + 813)))))) then v123=0 -0 ;v124=nil;v255=1 -0 ;end end end if (((1 + 0)==v122) or ((8776 -6503)<=(1521 + 130))) then v125=nil;v126=nil;v122=(3 -2) + 1 ;end end break;end if (((1 + 0)==v121) or ((2825 -(282 + 1634))>(139 + 771))) then v124=nil;v125=nil;v121=2 + 0 ;end end elseif ((v82==(3 + 3)) or ((2349 -(89 + 38))>=(3984 -(703 + 562)))) then local v167=753 -(297 + 437 + 19) ;local v168;local v169;while true do if (((16397 -12750)<=(5637 -(523 + 184))) and (v167==(1536 -(1346 + 189)))) then while true do if ((v168==(0 + (0 -0))) or ((2831 + 717 + 548)<=(1808 + 142 + 323))) then local v269=540 -((1581 -(1088 + 93)) + 140) ;while true do if (((1980 -(372 + (1505 -982)))<=(16632 -11987)) and (v269==(979 -(577 + 401)))) then v168=1635 -(258 + 1376) ;break;end if (((755 -(943 -(259 + 413)))==(2116 -(185 + 1447))) and (v269==(0 -0))) then v169=v81[1 + 1 ];v66=(v169 + v80) -(155 -(115 + 39)) ;v269=469 -(39 + 429) ;end end end if (((1215 + 226)<(3882 -(31 + 1015 + 90))) and (v168==(4 -3))) then for v295=v169,v66 do local v296=0 + 0 ;local v297;local v298;while true do if (((566 + 4011)>(2031 -1172)) and (v296==(1871 -(1368 + 502)))) then while true do if ((v297==0) or ((819 + (2401 -1201))>3315)) then v298=v77[v295-v169 ];v79[v295]=v298;break;end end break;end if ((v296==(0 + 0)) or ((5854 -(1935 + 16 + 45))==(2029 + 2155))) then v297=0 -0 ;v298=nil;v296=1 + 0 ;end end end break;end end break;end if (((107 + 188 + 255)<(1041 + 1401)) and (v167==(0 + (490 -(478 + 12))))) then v168=0 -0 ;v169=nil;v167=1 + 0 ;end end else v79[v81[7 -5 ]]();end elseif ((v82<=(3 + 5)) or ((5890 -(1167 + 235))<=(1912 -815))) then if ((v79[v81[1 + 1 ]]==v81[666 -(396 + 266) ]) or ((82 + 3211)<=(2955 -1574))) then v65=v65 + (935 -(325 + 609)) ;else v65=v81[3 + 0 ];end elseif ((v82>(28 -19)) or (((10478 -(845 + 767)) -4415)==(914 -(190 + 256)))) then v79[v81[2 -0 ]]=v79[v81[1525 -(385 + 1137) ]] -v81[1035 -(605 + 426) ] ;else do return;end end elseif ((v82<=(43 -(110 -(25 + 57)))) or ((2981 -1122)<(2931 -2147))) then if ((1975>=(1233 -721)) and (v82<=(6 + 6))) then if ((v82>(8 + 3)) or ((367 + 274)==(3233 + 181))) then v79[v81[1174 -(475 + 697) ]]={};else v37[v81[119 -(14 + 102) ]]=v79[v81[1 + 1 ]];end elseif ((v82<=(21 -8)) or ((657 -(17 + 59))>=(4888 -(176 + 852)))) then for v157=v81[5 -(444 -(319 + 122)) ],v81[469 -(392 + 74) ] do v79[v157]=nil;end elseif (((2732 -(37 + 111 + 1398))>805) and (v82>(1844 -((577 -(17 + 229)) + 1499)))) then do return v79[v81[3 -1 ]];end elseif ((v81[(2 -0) + 0 ]<=v79[v81[5 -1 ]]) or ((4835 -1195)<=((10090 -4382) -3320))) then v65=v65 + 1 + 0 ;else v65=v81[1424 -(110 + 1311) ];end elseif ((v82<=(7 + 11)) or ((1561 + (444 -274))<(1013 + 228))) then if ((v82<=(33 -17)) or ((1369 + (1243 -(61 + 252)))<=(447 + 121))) then local v130=(0 -0) + 0 ;local v131;while true do if ((v130==(32 -(21 + (19 -8)))) or ((3013 -1973)>(6262 -2882))) then v131=v81[3 -1 ];v79[v131](v13(v79,v131 + (789 -(658 + 130)) ,v81[1 + 2 ]));break;end end elseif ((v82>(33 -16)) or ((466 + 798)<(1745 -904))) then local v172=1732 -(974 + 758) ;local v173;local v174;local v175;local v176;local v177;local v178;while true do if ((v172==(0 + (379 -(360 + 19)))) or (2688==(1671 -828))) then v173=0 + 0 ;v174=nil;v172=295 -(93 + 201) ;end if ((v172==(205 -(174 + 22 + 6))) or ((3154 + 32)>(635 + (6751 -2857)))) then while true do if (((3646 + 914)>(15726 -12500)) and (v173==(1343 -(776 + 566)))) then local v270=0 + 0 ;while true do if (((0 + 0)==v270) or ((1433 + (3859 -(224 + 771)))<(2158 + 1512))) then v176=v174 + 2 + 0 ;v177={v79[v174](v79[v174 + (1 -0) ],v79[v176])};v270=1 + 0 ;end if ((v270==(981 -(881 + 99))) or ((4725 -(290 + 39 + 1663))>=(2996 + 1001))) then v173=2;break;end end end if (((76 + 380 + 413)<=(16247 -12796)) and (v173==2)) then local v271=0;while true do if ((v271==((1268 -(52 + 360)) -(317 + 538))) or (((7759 -5341) + 1151)>=(11287 -7243))) then v173=1 + 2 ;break;end if ((2181<=(3897 -(171 + 309))) and (v271==(0 + 0))) then for v339=751 -(322 + 428) ,v175 do v79[v176 + v339 ]=v177[v339];end v178=v177[1254 -(993 + 260) ];v271=1661 -(962 + 698) ;end end end if (((0 + 0)==v173) or ((3989 -(208 + 40 + 259))<(710 + 1413))) then local v272=0 -0 ;while true do if ((((763 + 3512) -(1312 + (1160 -854)))>=(1606 -825)) and (v272==(0 + 0))) then v174=v81[85 -(42 + 41) ];v175=v81[5 -1 ];v272=893 -(442 + 450) ;end if ((v272==(1 + 0)) or ((15767 -12122)==(4092 -(945 + 100 + 375)))) then v173=1 + 0 ;break;end end end if (((952 -((937 -502) + 335))>=(190 -103)) and (v173==3)) then if (((236 + 2303)==(7488 -(22493 -17544))) and v178) then local v326=0 -0 ;local v327;while true do if ((730<=(1075 + 1382)) and (v326==(0 -(0 + 0)))) then v327=939 -(833 + 106) ;while true do if (((2656 -(368 + 238))<=(4903 -(646 + 219 + 114))) and ((1156 -(240 + 916))==v327)) then v79[v176]=v178;v65=v81[3];break;end end break;end end else v65=v65 + 1 + 0 ;end break;end end break;end if (((775 + 177)<=(5712 -((953 -482) + 1236))) and (v172==(1 + 0))) then v175=nil;v176=nil;v172=1 + 1 ;end if (((257 + 1420)<(5636 -(465 + 239))) and (v172==2)) then v177=nil;v178=nil;v172=1 + 2 ;end end else v79[v81[2 + 0 ]]=v37[v81[236 -(133 + 100) ]];end elseif (((442 -319)<=(435 -(65 + 43))) and (v82<=(55 -36))) then v79[v81[2 + 0 ]]=v79[v81[7 -4 ]];elseif (((2604 -(31 + 286))>(2462 -(748 + 28))) and (v82>(81 -(203 -142)))) then local v181=0 + 0 + 0 ;local v182;local v183;local v184;while true do if ((v181==(1 + 0)) or ((12452 -9136)<(40 + 500))) then v184=nil;while true do if (((863 -(29 + 834))==v182) or ((8305 -5612)<(2570 -(1018 + 255)))) then v183=0 + 0 ;v184=nil;v182=305 -(175 + (382 -253)) ;end if (((6654 -(1321 + 552))>=(5356 -(552 + (3852 -3003)))) and (v182==(81 -(73 + 7)))) then while true do if (((2659 -687)<=(4015 + 116)) and ((73 -(10 + (179 -116)))==v183)) then v184=v81[2 + 0 ];do return v13(v79,v184,v66);end break;end end break;end end break;end if (((711 + 101)<(5672 -(732 + 435))) and (v181==(0 + 0))) then v182=0 + 0 + 0 ;v183=nil;v181=376 -(245 + 130) ;end end else local v185=(495 -(385 + 110)) + 0 ;local v186;local v187;local v188;while true do if ((v185==(0 + 0)) or ((1749 -((666 -401) + (1162 -814)))>(6002 -((1681 -(274 + 32)) + 361)))) then v186=480 -(339 + 141) ;v187=nil;v185=(1 + 0) -0 ;end if (((2862 -(654 + 1021))<(1977 -(8 + 11 + 209))) and (v185==(454 -(149 + 304)))) then v188=nil;while true do if (((1032 + 249)>=(369 + 56 + 34 + 133)) and (v186==(1 + 0))) then for v299=(1 -0) -0 , #v78 do local v300=0 + 0 ;local v301;local v302;local v303;while true do if (((3800 -(62 + 413))<(2998 + 1897)) and (v300==(1631 -(590 + 1041)))) then v301=0 -0 ;v302=nil;v300=(254 -(25 + 227)) -1 ;end if (((5253 -(804 + 330))>=(4611 -(126 + 1279))) and (v300==(1 + 0))) then v303=nil;while true do if ((v301==(99 -(20 + 79))) or ((3318 -1970)>=(3234 + 1161))) then local v365=0 + 0 ;while true do if ((v365==(0 -0)) or ((349 + 429)>(3405 -(543 + (501 -233))))) then v302=0 + (0 -0) ;v303=nil;v365=1 + 0 ;end if (((1228 + 2161)<=(2252 + 1916)) and (v365==(2 -(1890 -(1225 + 664))))) then v301=496 -(235 + 260) ;break;end end end if (((1089 + 1289)<=(9463 -7046)) and (v301==(1 -0))) then while true do if (((0 -0)==v302) or ((7563 -(5455 -(1304 + 542)))>=(1191 + 2957))) then v303=v78[v299];for v391=1572 -(1545 + 27) , #v303 do local v392=283 -(235 + 48) ;local v393;local v394;local v395;local v396;local v397;while true do if (((1622 -1018)<=(5825 -4350)) and ((1136 -(310 + 824))==v392)) then v397=nil;while true do if (((17600 -14027)<=(13094 -(23184 -13791))) and (v393==(0 + 0 + 0))) then v394=0 -0 ;v395=nil;v393=2 -1 ;end if ((v393==(1 + 0)) or ((1395 -(1005 + 124))==(6346 -3033))) then local v405=0 -0 ;while true do if ((((7339 -3575) -(93 + 823))>=(646 -(26 + 131 + 325))) and (v405==0)) then v396=nil;v397=nil;v405=1 -0 ;end if (((801 -(518 + 231))==(97 -45)) and (v405==(1 + 0))) then v393=5 -(1248 -(567 + 678)) ;break;end end end if ((v393==2) or (216==(2414 + 2309))) then while true do if ((v394==(209 -(94 + 115))) or ((4894 -3081)<1091)) then local v406=1251 -(175 + 1076) ;while true do if (((4056 -(613 + 101))>=((3134 -(403 + 1256)) -(269 + 76 + 3))) and (v406==(1 + 0))) then v394=716 -(41 + 23 + 651) ;break;end if (((2456 -(335 + 3))>(100 -44)) and (v406==(1311 -(1017 + 294)))) then local v412=0 + 0 ;while true do if (((563 + 66)<(320 + 902)) and (v412==(90 -(40 + 50)))) then v395=v303[v391];v396=v395[1 + 0 ];v412=1 + (0 -0) ;end if (((3155 -(199 + 1998))<=(4324 -2390)) and (v412==((1078 -(363 + 714)) + (0 -0)))) then v406=1818 -(418 + 1399) ;break;end end end end end if (((1217 -(427 + 127))<((255 + 2115) -(431 + 62))) and (v394==(1194 -(612 + 581)))) then v397=v395[5 -3 ];if (((v396==v79) and (v397>=v187)) or ((1404 + 13)>=(11860 -9048))) then local v408=140 -(65 + 75) ;local v409;while true do if ((((4701 -2316) -(30 + 2))<=3239) and (v408==(0 + 0))) then v409=0 + 0 ;while true do if ((v409==0) or (((1683 -(153 + 198)) + 2132)<=(2929 + 93))) then v188[v397]=v396[v397];v395[1 + (0 -0) ]=v188;break;end end break;end end end break;end end break;end end break;end if (((142 + 909)<(5156 -(314 + (1888 -(235 + 1652))))) and (v392==(1 + 0))) then v395=nil;v396=nil;v392=1747 -(1225 + 520) ;end if ((v392==((2514 -(58 + 1209)) -(132 + (5442 -4327)))) or ((512 -229)>(3760 -(263 + 413)))) then v393=0 -0 ;v394=nil;v392=1 + 0 ;end end end break;end end break;end end break;end end end break;end if ((((716 + 29) -(444 + 301))==v186) or ((3278 -(42 + 80))>=4302)) then local v273=820 -(638 + 182) ;while true do if ((v273==(1 -0)) or ((4723 + 120)<(8152 -3591))) then v186=1 -0 ;break;end if ((v273==(1822 -(755 + 1067))) or ((2278 -1761)>=(97 + 2459))) then v187=v81[737 -(152 + 583) ];v188={};v273=1 + 0 ;end end end end break;end end end elseif (((2881 -(1016 + 188))>(114 + 111 + 751)) and (v82<=(6 + 26))) then if (((446 + 1102)<(2880 + 1507)) and (v82<=(51 -25))) then if (((16235 -11866)>(1052 -(508 + 36))) and (v82<=((453 -(275 + 160)) + 5))) then if (((4079 -2590)<=(3823 + 34)) and (v82==(54 -32))) then v79[v81[2 + 0 ]][v79[v81[(520 + 1129) -(17 + 22 + 1607) ]]]=v81[2 + 2 ];else v65=v81[1 + 2 ];end elseif (((1113 + 1486)>=(3271 -(617 + 620))) and (v82<=(977 -(697 + 256)))) then v79[v81[24 -(19 + 3) ]][v81[1329 -(744 + 582) ]]=v81[5 -1 ];elseif (((15358 -11662)>(1256 -468)) and (v82>(43 -18))) then v79[v81[3 -1 ]]=v81[1546 -(591 + 9 + 943) ];else local v191=622 -(299 + 323) ;local v192;local v193;while true do if (((1 + 0)==v191) or ((15435 -11764)==((14933 + 3010) -12948))) then while true do if (((904 -(494 + 18))<=(858 -394)) and (v192==((0 -0) -0))) then v193=v81[1 + 1 ];v79[v193]=v79[v193](v13(v79,v193 + 1 ,v66));break;end end break;end if ((1352==1352) and (v191==(0 -0))) then local v250=1205 -(548 + 657) ;while true do if (((15 + 41)<(3423 -1683)) and (v250==(1599 -(1466 + 133)))) then v192=0 -0 ;v193=nil;v250=1185 -(472 + 712) ;end if (((435 -(112 + 93))<(4953 -2521)) and (v250==(3 -2))) then v191=742 -(710 + 31) ;break;end end end end end elseif (((4920 -((163 -51) + 1068))>(632 + 2445)) and (v82<=(20 + 9))) then if (((11538 -7117)>=(825 + 1973)) and (v82<=(1927 -(164 + 1736)))) then local v139=1955 -(905 + 1050) ;local v140;local v141;while true do if ((v139==(0 + 0)) or ((4582 -(649 + 374 + 3))==((1249 -612) -382))) then v140=0 + 0 ;v141=nil;v139=284 -(78 + 205) ;end if (((2464 -(796 + 943))<=(6220 -2225)) and (v139==((1416 -(1087 + 327)) -1))) then while true do if ((v140==(13 -(6 + 7))) or (((261 + 5512) -2183)<(8431 -(17902 -12811)))) then v141=v81[2 -0 ];v79[v141]=v79[v141](v79[v141 + 1 + 0 ]);break;end end break;end end elseif (((1755 + 2243)==(5008 -(245 + 765))) and (v82>((1509 -(1345 + 89)) -(225 -178)))) then local v194=1802 -(708 + 1094) ;local v195;local v196;local v197;while true do if (((1859 -(647 + (2241 -1029)))==v194) or ((625 + 815)>(3247 + 720))) then v195=0 -0 ;v196=nil;v194=1 -0 ;end if ((v194==(1 + 0)) or (((12278 -7531) -2802)>=(5027 -(81 + 22)))) then v197=nil;while true do if ((((7403 -1872) -1357)==(6699 -2525)) and (v195==(1 + 0 + 0))) then while true do if ((v196==(0 + 0)) or ((10067 -5413)==(2599 -(480 + 224)))) then v197=v81[2 + 0 ];do return v79[v197](v13(v79,v197 + 1 + 0 ,v66));end break;end end break;end if (((793 -(451 + 342))==v195) or ((237 + 123 + 2310)<=(2878 -(1509 + 178 + 50)))) then local v276=0 + 0 ;while true do if ((v276==((22 + 219) -(118 + (902 -(606 + 173))))) or (3888>=(2228 + 2733))) then v196=0 + (0 -0) ;v197=nil;v276=3 -2 ;end if (((673 + 762)<(4605 -((1329 -(1008 + 230)) + 208))) and (v276==(3 -(2 -0)))) then v195=1;break;end end end end break;end end else local v198=0;local v199;local v200;local v201;local v202;while true do if (((4872 -3693)>(32 + 20 + 72)) and (v198==(1612 -(903 + 206 + 503)))) then local v251=634 -(541 + 93) ;while true do if (((4591 -(413 + 225))>((5023 -2668) -(2438 -(477 + 242)))) and (v251==(1 + 0))) then v198=1 -0 ;break;end if (((5466 -3618)<=(1370 + 2049)) and (v251==(0 + 0))) then v199=0 + 0 ;v200=nil;v251=(3609 -2725) -(459 + 424) ;end end end if (((1276 -(1104 + 171))==v198) or (3016==(5727 -(161 + 840)))) then v201=nil;v202=nil;v198=5 -3 ;end if (((2953 -(680 + 46))>(3616 -(67 + 1389))) and (v198==(2 + 0))) then while true do if ((v199==(408 -(24 + 384))) or ((281 + 36)>=(1883 + 983))) then local v277=(0 + 0) -0 ;local v278;while true do if ((v277==(0 + 0)) or ((1716 -707)==(4076 + 792))) then v278=0 + 0 + 0 ;while true do if ((v278==(1 + 0)) or ((4827 -(1836 + 157))<=(190 -(83 + 76)))) then v199=88 -(49 + 38) ;break;end if ((v278==0) or ((1452 -(727 + 353))>((13252 -6706) -2633))) then local v355=1250 -(188 + 1062) ;while true do if (((757 + 41)>=((180 -81) + 4)) and (v355==(2 -1))) then v278=1 + 0 ;break;end if (((0 + 0)==v355) or ((69 + 28 + 750)>(4132 -(693 + 703)))) then v200=v81[4 -2 ];v201={v79[v200](v79[v200 + (2 -1) ])};v355=2 -1 ;end end end end break;end end end if ((v199==(404 -(52 + 351))) or ((3371 -(767 + 300))<=(2758 -(1182 + 794)))) then v202=1316 -((1223 -(114 + 383)) + 590) ;for v304=v200,v81[(3 + 7) -6 ] do local v305=0;local v306;while true do if (((2191 -(984 + 362))<(10778 -5882)) and (v305==(0 -0))) then v306=0 -0 ;while true do if (((5702 -(875 + 144))>(2357 -(59 + 719))) and ((0 -0)==v306)) then v202=v202 + ((1415 -819) -(556 + 39)) ;v79[v304]=v201[v202];break;end end break;end end end break;end end break;end end end elseif (((3531 -(591 + 244))<=((931 -415) + 4094)) and (v82<=(59 -29))) then v79[v81[(2169 -(751 + 859)) -(16 + 541) ]][v81[1629 -(468 + 186 + 972) ]]=v79[v81[1884 -(924 + 956) ]];elseif ((v82==(31 + 0)) or ((525 + 194)>=(3838 -(369 + 1364)))) then v79[v81[2]]=v79[v81[43 -(28 + (40 -28)) ]][v79[v81[936 -(790 + 142) ]]];else local v205=0 + 0 ;local v206;local v207;local v208;local v209;while true do if ((v205==2) or ((1367 -(73 + 86 + 73))>(3493 -(344 + 55)))) then while true do if ((v206==(5 -3)) or ((467 -(137 + 26))>(1703 -(233 + 52)))) then for v307=1772 -(1651 + 120) ,v81[2 + 2 ] do local v308=0 -0 ;local v309;local v310;while true do if ((v308==(0 -0)) or ((448 + 0 + 2821)>=(5590 -(805 + 709)))) then v309=(0 + 0) -0 ;v310=nil;v308=1826 -(442 + 1383) ;end if ((v308==(2 -1)) or (((15667 -11410) + 432)==((5647 + 273) -(1390 + 566)))) then while true do if ((v309==(0 + 0)) or ((3619 + 313)<((50 + 3659) -(117 + 45 + 35)))) then local v368=1510 -(891 + (1441 -822)) ;while true do if ((v368==(0 -0)) or (4612==(4457 -(90 + 746)))) then v65=v65 + (2 -1) + 0 ;v310=v73[v65];v368=1 -0 ;end if ((v368==(547 -(134 + (1880 -(345 + 1123))))) or ((2263 -(220 + 989))<=622)) then v309=1 -0 ;break;end end end if ((((1766 -(1124 + 155)) + (669 -332))<(1174 + 2253)) and (v309==(167 -(85 + 81)))) then if ((v310[1221 -(776 + 444) ]==(52 -33)) or (((2961 -(736 + 159)) -(360 + (843 -(349 + 391))))==(5079 -3752))) then v209[v307-((2 -1) + 0) ]={v79,v310[7 -(18 -14) ]};else v209[v307-(1 + 0) ]={v36,v310[4 -1 ]};end v78[ #v78 + (44 -(35 + 7 + 1)) ]=v209;break;end end break;end end end v79[v81[1 + 1 ]]=v34(v207,v208,v37);break;end if (((1009 + 526)<(13294 -9834)) and (v206==(0 + 0))) then local v280=0 -0 ;while true do if ((((2264 -(760 + 663)) -((852 -549) + 538))==v280) or ((2728 -(22 + 318))<=((11220 -8135) -1481))) then v207=v74[v81[(477 + 20) -(144 + 350) ]];v208=nil;v280=4 -3 ;end if (((2138 + (2778 -1182))==(15676 -11942)) and (v280==(1 + 0))) then v206=425 -(177 + 247) ;break;end end end if (((11499 -6680)>=(915 -(452 + 167))) and (v206==(1 + 0 + 0))) then v209={};v208=v10({},{__index=function(v281,v282)local v311=0 + 0 ;local v312;local v313;while true do if (((5742 -4138)<(431 + 2309)) and (v311==(984 -(562 + 421)))) then while true do if (((306 + 67)<(2940 -(1023 + 326))) and (v312==(0 + 0))) then local v370=0 -0 ;while true do if (((3557 + 426)<(5373 -(137 + 1135))) and (v370==(0 -0))) then v313=v209[v282];return v313[1 -0 ][v313[1237 -(262 + 973) ]];end end end end break;end if ((v311==(0 + (1267 -(1127 + 140)))) or (3030<=(350 + 139 + 271))) then local v342=1508 -(562 + 946) ;while true do if ((2293<=(1246 + 2117)) and (v342==(0 -(0 -0)))) then v312=1110 -(124 + 986) ;v313=nil;v342=863 -(761 + 101) ;end if (((5183 -(1023 + 650))<=((5678 + 64) -(977 + 380))) and (v342==(267 -(38 + 47 + 181)))) then v311=533 -(365 + (1792 -(459 + 1166))) ;break;end end end end end,__newindex=function(v281,v282,v283)local v314=0 -0 ;local v315;local v316;while true do if ((v314==(1477 -(1100 + 376))) or ((6709 -(749 + 1044))<=(4298 -((1131 -(681 + 280)) + 444)))) then while true do if (((2008 -(4817 -3555))==(1305 -(191 + 368))) and (v315==(0 -(1789 -(315 + 1474))))) then v316=v209[v282];v316[1 + 0 ][v316[1 + 1 ]]=v283;break;end end break;end if (((4104 -(558 + 4))>=(641 + 1650)) and (v314==(0 + 0))) then v315=0 + 0 + 0 ;v316=nil;v314=1;end end end});v206=1450 -(1336 + 112) ;end end break;end if (((2936 -(534 + 632))>=1335) and (v205==(1 + 0))) then v208=nil;v209=nil;v205=(2 + 1) -1 ;end if (((1587 + 3297)<=4899) and (v205==(0 + 0))) then v206=0 -0 ;v207=nil;v205=1 + 0 ;end end end elseif ((v82<=(30 + 7)) or ((2161 -526)>(4924 -1792))) then if (((197 + 2385)<=(3643 + 60)) and (v82<=(3 + 31))) then if ((v82==(61 -28)) or ((5013 -(193 + 821))<(1165 + (1024 -604)))) then local v144=(2991 -1666) -(27 + 1298) ;local v145;local v146;local v147;while true do if (((2548 -(93 + (1542 -1113)))>=(3370 -(716 + 1172))) and (v144==(1134 -(798 + 336)))) then v145=0;v146=nil;v144=1 + 0 ;end if (((989 + 194)<2234) and (v144==(4 -(773 -(289 + 481))))) then v147=nil;while true do if ((((20336 -11692) -5938)<(4911 -(198 + 614))) and (v145==0)) then v146=v81[541 -(222 + 316) ];v147=v79[v146];v145=1 + 0 ;end if (((2080 -(658 + 422))<=(4627 + 118)) and (v145==(1 + 0))) then for v267=v146 + 1 + 0 ,v81[12 -8 ] do v147=v147   .. v79[v267] ;end v79[v81[2]]=v147;break;end end break;end end else local v148=0 -0 ;local v149;local v150;while true do if (((3635 -((97 -33) + 232))>=(5989 -(2212 + 1691))) and (v148==(3 -(1262 -(137 + 1123))))) then v79[v149 + (1157 -(813 + 343)) ]=v150;v79[v149]=v150[v81[4 + 0 ]];break;end if ((v148==(1581 -(1359 + 222))) or ((4652 -(326 + 1324))<=(3544 -(358 + 820)))) then local v234=0 + 0 ;while true do if ((v234==(0 + 0)) or ((4584 -1817)==(1151 + 1048))) then v149=v81[2 + 0 ];v150=v79[v81[3 -0 ]];v234=1764 -(1304 + 459) ;end if ((((5937 -(642 + 975)) -(199 + 7))>(1745 + 1691)) and (v234==(2 -1))) then v148=654 -((609 -(65 + 118)) + 227) ;break;end end end end end elseif (((8648 -6090)<=(1508 + 2186)) and (v82<=(1410 -(1275 + 100)))) then local v151=0 -0 ;local v152;while true do if ((v151==(0 -0)) or ((1320 + 3060)==(1723 -(49 + 92)))) then v152=v81[1 + 1 ];do return v13(v79,v152,v152 + v81[4 -1 ] );end break;end end elseif ((v82>(56 -(68 -48))) or ((1983 -(247 + 861))>=((3254 + 3364) -4691))) then local v210=0 + 0 ;local v211;local v212;local v213;local v214;local v215;while true do if (((0 + 0)==v210) or ((7455 -5354)>(2812 -(75 + 78)))) then v211=0 -0 ;v212=nil;v210=681 -(510 + 170) ;end if (((839 -(251 + 309))<=(407 + 1007)) and (v210==(1 + 0))) then v213=nil;v214=nil;v210=1566 -(1165 + 399) ;end if ((v210==(2 -0)) or ((2157 -876)<734)) then v215=nil;while true do if ((v211==(1 + 0)) or ((7800 -3357)<(10569 -7007))) then v66=(v214 + v212) -(1 + 0) ;v215=207 -(7 + 200) ;v211=2 + 0 ;end if (((3013 -2186)<(3733 -(113 + 711))) and (v211==(5 -3))) then for v317=v212,v66 do local v318=0 -0 ;local v319;while true do if (((0 -0)==v318) or ((1307 + 2152 + 1058)<(4841 -2656))) then v319=0 + 0 ;while true do if (((6189 -(796 + (2365 -(749 + 575))))>3093) and (v319==(0 -0))) then v215=v215 + (1 -0) ;v79[v317]=v213[v215];break;end end break;end end end break;end if (((1022 -(96 + 490 + (1034 -817)))==219) and (v211==((1776 -1145) -(577 + 54)))) then local v284=0 + 0 ;while true do if (((13257 -10400)>=(4734 -(1506 + 438))) and (v284==(4 -3))) then v211=1 + 0 ;break;end if ((v284==(0 -(0 -0))) or (((3343 -(1084 + 887)) -(31 + 130))>(2102 -(107 + 90)))) then v212=v81[5 -3 ];v213,v214=v76(v79[v212](v79[v212 + 1 + 0 + 0 ]));v284=662 -(417 + 244) ;end end end end break;end end elseif ((v79[v81[1716 -(1212 + 30 + 472) ]]~=v81[7 -3 ]) or ((1458 + 360 + 501)<(8860 -6694))) then v65=v65 + (2 -1) ;else v65=v81[1651 -(777 + (1806 -935)) ];end elseif ((v82<=40) or ((3990 + 271)>(6523 -(1525 + 462)))) then if ((((5105 + 1537) -1699)>=((12371 -(518 + 137)) -7595)) and (v82<=(1365 -(962 + 365)))) then local v153=0 + 0 ;local v154;while true do if (((1125 + 1302)>=(75 + 12)) and ((0 + 0)==v153)) then v154=v81[2 + 0 ];v79[v154](v13(v79,v154 + 1 ,v66));break;end end elseif ((1197<(365 + 2522)) and (v82>(122 -83))) then if ((v79[v81[1254 -(273 + 979) ]]<v81[(49 + 1316) -(165 + 1196) ]) or ((1032 + 2774)>(4223 -(67 + 177)))) then v65=v65 + (2 -1) ;else v65=v81[3 + 0 ];end else local v216=0 -0 ;local v217;local v218;local v219;local v220;while true do if (((2415 -1725)<(1201 + 506)) and (v216==(0 -0))) then v217=0 -0 ;v218=nil;v216=1 + 0 ;end if ((v216==1) or ((1388 -(320 + 190))<(1462 -817))) then v219=nil;v220=nil;v216=932 -(266 + 664) ;end if ((v216==(2 -0)) or ((456 + 1003)>=(2982 + 1367))) then while true do if (((5139 -(1463 + 90))>=(2529 + 608)) and (v217==(1766 -(1628 + 137)))) then v220=v79[v218 + (4 -2) ];if ((v220>(0 -0)) or (((2732 -(675 + 179)) -(260 + 1377))>(16091 -12184))) then if ((v219>v79[v218 + 1 + 0 + 0 ]) or ((4192 -(676 + 305))>3240)) then v65=v81[1827 -(1194 + 630) ];else v79[v218 + (282 -(114 + 165)) ]=v219;end elseif ((v219<v79[v218 + 1 + 0 + 0 ]) or ((922 + 1997)>(6437 -(121 + 1399)))) then v65=v81[3];else v79[v218 + 2 + 1 ]=v219;end break;end if ((100<(977 -(156 + 382))) and (v217==(0 + 0))) then v218=v81[2];v219=v79[v218];v217=1151 -(20 + 1130) ;end end break;end end end elseif (((3918 -(42 + 151))>(4494 -(981 + 638))) and (v82<=(66 -25))) then local v155=1774 -(1236 + 538) ;local v156;while true do if (((1055 -(462 + 593))==v155) or (((10566 -(369 + 209)) -7125)>(5784 -(537 + 554)))) then v156=v81[5 -3 ];v79[v156]=v79[v156](v13(v79,v156 + (986 -(184 + 801)) ,v81[940 -(329 + 608) ]));break;end end elseif ((v82>(1902 -(510 + 1350))) or ((4616 -2526)==(2809 + 80))) then if ((v81[5 -3 ]==v79[v81[2 + 2 ]]) or ((95 + 741)>(576 + 3710))) then v65=v65 + 1 + 0 ;else v65=v81[3 + 0 ];end else v79[v81[2 + 0 ]]=v36[v81[3 + 0 ]];end v65=v65 + 1 + 0 ;break;end end end end A,B=v32(v11(v69));if  not A[1] then local v85=v35[4][v65] or "?" ;error("Script error at ["   .. v85   .. "]:"   .. A[2] );else return v13(A,2,B);end end;end return v34(v33(),{},v17)(...);end vv9(),...);end
