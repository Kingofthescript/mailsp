-- liquid scripts ON TOP!!!

do local v0=tonumber;local v1=string.byte;local v2=string.char;local v3=string.sub;local v4=string.gsub;local v5=string.rep;local v6=table.concat;local v7=table.insert;local v8=math.ldexp;local v9=getfenv or function()return _ENV;end ;local v10=setmetatable;local v11=pcall;local v12=select;local v13=unpack or table.unpack ;local v14=tonumber;local function v15(v16,v17,...)local v18=0;local v19;local v20;local v21;local v22;local v23;local v24;local v25;local v26;local v27;local v28;local v29;local v30;while true do if (v18==1) then v21=function(v31,v32,v33)if v33 then local v72=(v31/((4 -2)^(v32-1)))%((3 -1)^(((v33-((1 -0) + 0)) -(v32-(1695 -(544 + 1150)))) + 1 + 0)) ;return v72-(v72%(2 -1)) ;else local v73=411 -((599 -(270 + 272)) + 354) ;local v74;while true do if (v73==(0 + 0)) then v74=(8 -6)^(v32-1) ;return (((v31%(v74 + v74))>=v74) and 1) or (0 -0) ;end end end end;v22=nil;v22=function()local v39=1121 -(557 + 564) ;local v40;while true do if (v39==((1442 -(384 + 104)) -(168 + 785))) then return v40;end if (v39==(801 -(456 + 345))) then v40=v1(v16,v19,v19);v19=v19 + 1 ;v39=558 -(325 + 164 + 68) ;end end end;v23=nil;v18=2;end if (2==v18) then v23=function()local v41=0 + 0 ;local v42;local v43;while true do if (v41==(3 -2)) then return (v43 * (722 -466)) + v42 ;end if (v41==(0 + 0)) then v42,v43=v1(v16,v19,v19 + 2 );v19=v19 + 1 + 1 ;v41=(230 -(209 + 20)) + 0 ;end end end;v24=nil;v24=function()local v44,v45,v46,v47=v1(v16,v19,v19 + (4 -1) );v19=v19 + (18 -(1041 -(916 + 111))) ;return (v47 * (8802908 + 7974308)) + (v46 * (191929 -126393)) + (v45 * (400 -144)) + v44 ;end;v25=nil;v18=3;end if (v18==4) then v28=nil;v28=function(...)return {...},v12("#",...);end;v29=nil;v29=function()local v48=0;local v49;local v50;local v51;local v52;local v53;local v54;while true do if (v48~=3) then else local v86=0 -0 ;while true do if (1~=v86) then else return v52;end if (v86==(0 -0)) then for v114=1,v24() do v50[v114-(4 -3) ]=v29();end for v116=1 + 0 ,v24() do v51[v116]=v24();end v86=1;end end end if (v48==(1368 -(167 + 1201))) then v49={};v50={};v51={};v48=1 + 0 ;end if (v48==1) then local v87=0;while true do if (v87~=1) then else v54={};v48=4 -2 ;break;end if (v87==(0 + 0)) then v52={v49,v50,nil,v51};v53=v24();v87=4 -3 ;end end end if (v48~=2) then else for v93=1,v53 do local v94=0;local v95;local v96;local v97;local v98;local v99;while true do if (v94~=1) then else v97=nil;v98=nil;v94=1 + 1 ;end if (v94~=0) then else v95=0;v96=nil;v94=1;end if (2==v94) then v99=nil;while true do if (v95==(0 + 0)) then local v120=0 -0 ;while true do if (v120==1) then v95=1 + 0 ;break;end if (v120==(120 -(69 + 51))) then v96=0 -0 ;v97=nil;v120=1 + 0 ;end end end if (v95~=(1 + 1)) then else while true do if (v96==1) then v99=nil;while true do if (v97~=0) then else local v124=0;local v125;while true do if (v124~=0) then else v125=0 -0 ;while true do if (v125==(296 -(280 + 16))) then v98=v22();v99=nil;v125=2 -1 ;end if (v125~=(1874 -(127 + 1746))) then else v97=1;break;end end break;end end end if ((80 -(34 + 45))~=v97) then else if (v98==(3 -2)) then v99=v22()~=0 ;elseif (v98==2) then v99=v25();elseif (v98~=(1 + 2)) then else v99=v26();end v54[v93]=v99;break;end end break;end if (v96~=0) then else local v121=0;local v122;while true do if (v121==(1799 -(305 + 1494))) then v122=491 -(489 + 2) ;while true do if (v122~=1) then else v96=1;break;end if (v122==0) then v97=0 + 0 ;v98=nil;v122=1 + 0 ;end end break;end end end end break;end if (v95==1) then v98=nil;v99=nil;v95=2 + 0 ;end end break;end end end v52[3]=v22();for v100=3 -2 ,v24() do local v101=0 + 0 ;local v102;local v103;local v104;local v105;while true do if (v101==2) then while true do if (v102~=(0 -0)) then else v103=0;v104=nil;v102=2 -1 ;end if (v102==1) then v105=nil;while true do if ((1887 -(444 + 1442))==v103) then while true do if (0==v104) then v105=v22();if (v21(v105,1,1)==(978 -(738 + 240))) then local v127=0 -0 ;local v128;local v129;local v130;local v131;while true do if (v127~=0) then else local v177=0 -0 ;while true do if (v177~=0) then else v128=0;v129=nil;v177=673 -(566 + 106) ;end if ((3 -2)==v177) then v127=1 + 0 ;break;end end end if (v127~=(1 -0)) then else v130=nil;v131=nil;v127=2;end if (v127~=2) then else while true do if (v128~=1) then else local v249=0 + 0 ;local v250;while true do if (v249==0) then v250=0 -0 ;while true do if (v250~=1) then else v128=2;break;end if (v250~=0) then else v131={v23(),v23(),nil,nil};if (v129==(0 + 0)) then local v363=0 + 0 ;local v364;while true do if (v363==0) then v364=297 -(204 + 93) ;while true do if (v364~=(0 -0)) then else v131[3]=v23();v131[4]=v23();break;end end break;end end elseif (v129==1) then v131[3]=v24();elseif (v129==2) then v131[3]=v24() -(2^16) ;elseif (v129~=3) then else local v410=0 + 0 ;local v411;local v412;local v413;while true do if (v410==(0 + 0)) then v411=0 -0 ;v412=nil;v410=1 + 0 ;end if (v410==1) then v413=nil;while true do if (v411~=(998 -(678 + 320))) then else v412=0 -0 ;v413=nil;v411=1465 -(11 + 1453) ;end if (v411~=(1 + 0)) then else while true do if ((0 + 0)==v412) then v413=0 + 0 ;while true do if (v413==(0 + 0)) then v131[3]=v24() -(2^(6 + 10)) ;v131[4]=v23();break;end end break;end end break;end end break;end end end v250=1;end end break;end end end if (3~=v128) then else if (v21(v130,3,1846 -(1555 + 288) )~=(618 -(418 + 199))) then else v131[4]=v54[v131[4]];end v49[v100]=v131;break;end if ((870 -(232 + 638))==v128) then local v252=0;local v253;local v254;while true do if (v252~=0) then else v253=0;v254=nil;v252=1 -0 ;end if (v252==1) then while true do if (v253~=(0 -0)) then else v254=0;while true do if (v254~=1) then else v128=1 + 0 ;break;end if (v254~=0) then else v129=v21(v105,2 + 0 ,3);v130=v21(v105,4,6);v254=2 -1 ;end end break;end end break;end end end if (2~=v128) then else local v255=0;local v256;while true do if (v255~=(0 + 0)) then else v256=0 -0 ;while true do if (v256~=(1 -0)) then else v128=3;break;end if ((1477 -(1434 + 43))==v256) then local v349=0 -0 ;while true do if (v349~=0) then else if (v21(v130,1,1 -0 )==(1 + 0)) then v131[2 + 0 ]=v54[v131[2]];end if (v21(v130,2,2 + 0 )==1) then v131[8 -5 ]=v54[v131[1623 -(820 + 800) ]];end v349=1 + 0 ;end if (v349~=1) then else v256=1 + 0 ;break;end end end end break;end end end end break;end end end break;end end break;end if ((0 + 0)~=v103) then else local v123=0 -0 ;while true do if (v123==0) then v104=0 -0 ;v105=nil;v123=1;end if (v123==(1116 -(255 + 860))) then v103=1;break;end end end end break;end end break;end if (v101==0) then v102=0 + 0 ;v103=nil;v101=1 + 0 ;end if (v101==1) then v104=nil;v105=nil;v101=2;end end end v48=3;end end end;v18=5;end if (v18==0) then v19=1;v20=nil;v16=v4(v3(v16,5),"..",function(v34)if (v1(v34,2)==79) then v20=v0(v3(v34,1,1));return "";else local v75=v2(v0(v34,16));if v20 then local v106=0;local v107;while true do if (0==v106) then v107=v5(v75,v20);v20=nil;v106=1;end if (v106==1) then return v107;end end else return v75;end end end);v21=nil;v18=1;end if (v18==5) then v30=nil;v30=function(v35,v36,v37)local v55=v35[1];local v56=v35[2];local v57=v35[3];return function(...)local v67=1;local v68= -1;local v69={...};local v70=v12("#",...) -1 ;local function v71()local v76=v55;local v77=v56;local v78=v57;local v79=v28;local v80={};local v81={};local v82={};for v89=0 + 0 ,v70 do if ((v89>=v78) or ((4648 -(393 + 390))<(2259 + 1004))) then v80[v89-v78 ]=v69[v89 + 1 ];else v82[v89]=v69[v89 + (3 -2) ];end end local v83=(v70-v78) + 1 + 0 ;local v84;local v85;while true do local v90=0;local v91;while true do if (((449 -(40 + 92 + 317))==v90) or ((6938 -4151)==(1698 -(470 + 107 + 8)))) then v91=0 + 0 ;while true do if ((v91==(1 + 0 + 0)) or ((1913 + 9)<(1202 -(505 + 91)))) then if (((8707 -(2499 + 2161))==(17272 -13225)) and (v85<=(41 -(2 + 18)))) then if (((5136 -(176 + (461 -129)))>(2013 -(53 + 998))) and (v85<=(3 + 7))) then if (((5055 -(149 + 676))<(4835 -(354 + 75))) and (v85<=(2 + 2))) then if ((v85<=1) or (150>(2957 -1488))) then if (((2373 + 2396)>=763) and (v85>0)) then local v132=0 -0 ;local v133;local v134;while true do if (((6065 -3042)>2486) and (v132==(0 + 0 + 0))) then v133=532 -(142 + 390) ;v134=nil;v132=2 -1 ;end if (((404 + 2826)<(162 + 19 + 3373)) and (v132==(580 -(305 + 274)))) then while true do if (((0 + 0 + 0)==v133) or ((1304 -(125 + 187))>=3212)) then v134=v82[v84[1 + 3 ]];if ( not v134 or ((19 + 133)>((3406 + 774) -2235))) then v67=v67 + 1 ;else local v305=88 -(6 + 82) ;local v306;while true do if (((13893 -9650)>=(5948 -(1376 + 523))) and (v305==(888 -(177 + 711)))) then v306=0 + 0 ;while true do if ((((5360 -(756 + 294)) -(529 + 1392))>(2410 -(1769 -(321 + 297)))) and (v306==(1835 -(83 + 1752)))) then v82[v84[2 + 0 ]]=v134;v67=v84[3];break;end end break;end end end break;end end break;end end else local v135=1296 -(645 + 651) ;local v136;local v137;local v138;local v139;while true do if ((v135==(1 + 1)) or ((1401 -437)<=(362 + (912 -(299 + 374))))) then while true do if ((v136==(806 -(410 + 107 + 288))) or ((1804 -680)>=(8739 -6232))) then v139=0 + 0 ;for v287=v137,v84[467 -(390 + 73) ] do local v288=1211 -(197 + 1014) ;local v289;while true do if ((v288==0) or (3957==(3260 -(1145 + (297 -(18 + 100)))))) then v289=0 -0 ;while true do if (((7551 -(19884 -13852))<(2279 + (2891 -(384 + 917)))) and (v289==(1678 -(434 + 1244)))) then v139=v139 + 1 ;v82[v287]=v138[v139];break;end end break;end end end break;end if ((v136==(1010 -(537 + (1836 -1363)))) or ((396 + 1548)==1418)) then local v270=0 + 0 ;while true do if ((v270==(1 + 0)) or ((128 + 256 + 2)>(1562 -(56 + (3288 -2205))))) then v136=996 -((2248 -(1277 + 34)) + 58) ;break;end if (((2800 -1308)>(2255 -1599)) and (v270==((0 + 0) -0))) then v137=v84[2 + 0 ];v138={v82[v137](v82[v137 + 1 ])};v270=1;end end end end break;end if ((v135==(505 -(456 + (74 -25)))) or ((2103 -(1308 + 188))>(1071 + 3599))) then v136=0 + (509 -(94 + 415)) ;v137=nil;v135=1 + 0 + 0 ;end if (((5362 -(1647 + 302))<=((4868 + 200) -(359 + 50))) and (v135==(1 + 0))) then v138=nil;v139=nil;v135=463 -(95 + 366) ;end end end elseif (((1373 -(420 + 809))<(2254 -1639)) and (v85<=(1573 -(1492 + 79)))) then v82[v84[2 + 0 ]]=v82[v84[(401 + 1294) -(1470 + (799 -577)) ]][v84[15 -11 ]];elseif ((v85>(886 -(631 + 252))) or (4468<=(4169 -(836 + 23)))) then v37[v84[3]]=v82[v84[1 + 1 ]];else local v180=0 -0 ;local v181;while true do if ((((6518 -(865 + 695)) -(337 + (3065 -(1063 + 410))))==(4191 -(906 + 40 + 216))) and (((0 -0) -0)==v180)) then v181=v84[1 + 1 ];v82[v181](v13(v82,v181 + (141 -(47 + 93)) ,v68));break;end end end elseif ((v85<=((94 + 79) -(144 + 22))) or ((1751 + 2670)<=1750)) then if (((1 + 3155)>(3350 -(1068 + (278 -167)))) and (v85<=(5 + 0))) then v82[v84[2 + 0 ]]=v37[v84[5 -2 ]];elseif ((3192==(1129 + 2063)) and (v85>(754 -(701 + 47)))) then local v182=0;local v183;local v184;while true do if (((1977 -(1448 + 529))==v182) or ((5580 -3468)>=(1570 + 733))) then local v258=0 -0 ;while true do if ((v258==(1 + 0)) or ((6124 -3866)==(13 + 373))) then v182=(1284 -237) -(56 + (2499 -(345 + 1164))) ;break;end if ((v258==(0 + (326 -(193 + 133)))) or ((1299 + 1008)<=485)) then v183=(449 -(210 + 239)) -0 ;v184=nil;v258=1 + 0 ;end end end if ((v182==1) or ((2135 -(224 + 978))>(10428 -7691))) then while true do if (((1806 -(598 + 683))<=(4268 -3098)) and (v183==(0 + 0))) then v184=v84[(3585 -(562 + 1079)) -(1270 + 672) ];do return v13(v82,v184,v184 + v84[2 + 1 ] );end break;end end break;end end else do return;end end elseif (((580 + 1060)==1640) and (v85<=(13 -5))) then v67=v84[8 -5 ];elseif ((v85>9) or ((7794 -5499)==4069)) then local v185=0 -0 ;local v186;local v187;local v188;while true do if (((1789 -(165 + 38 + (697 -(266 + 202))))==(2349 -992)) and (v185==2)) then if ((v187>(32 -(24 + 8))) or ((351 + 81)>=(710 + 3850))) then if ((v188<=v82[v186 + (1479 -(1307 + 171)) ]) or ((305 -85)>(2805 -(394 + 585)))) then local v324=1984 -(1702 + 282) ;local v325;while true do if (((1089 + 3877)==(24803 -19837)) and ((0 -0)==v324)) then v325=0 + 0 ;while true do if (((0 + 0)==v325) or ((1908 -(155 + (2090 -(512 + 1374))))<=((490 -244) + 226 + 34))) then v67=v84[1 + 2 ];v82[v186 + (5 -2) ]=v188;break;end end break;end end end elseif (((4295 -(567 + 1376))<=4813) and (v188>=v82[v186 + (2 -1) ])) then local v326=0 + 0 ;local v327;local v328;while true do if (((4344 -((867 -(770 + 76)) + 357))>=(3929 -(42 + 52))) and (v326==(0 + 0))) then v327=0 + 0 ;v328=nil;v326=891 -(485 + 405) ;end if ((v326==1) or (1712>=2177)) then while true do if ((v327==0) or ((2181 -(12 + 493))>=(4523 -(48 + 34)))) then v328=0;while true do if ((v328==0) or (805<(439 + 336))) then v67=v84[3];v82[v186 + 3 ]=v188;break;end end break;end end break;end end end break;end if (((5934 -1623)>(2 + (474 -267))) and (v185==(1 -0))) then local v259=0 -0 ;while true do if ((v259==(1 + 0)) or (552>(3147 + 457))) then v185=(4 -2) -0 ;break;end if ((v259==(0 -0)) or ((3312 -815)==(16266 -11532))) then v188=v82[v186] + v187 ;v82[v186]=v188;v259=1110 -(245 + 864) ;end end end if (((6083 -3620)>=(246 + 962)) and (v185==(1888 -(891 + 997)))) then local v260=0 -0 ;while true do if (((1548 + 2160 + 982)>(1174 + 2711)) and ((1455 -(857 + 598))==v260)) then v186=v84[(2 + 0) -0 ];v187=v82[v186 + 2 ];v260=56 -(34 + 21) ;end if ((v260==((1468 -(955 + 211)) -(12 + 289))) or ((423 -(64 + 38))>(2255 + 619))) then v185=102 -(14 + 87) ;break;end end end end elseif ((v82[v84[3 -1 ]]<v84[1091 -(1007 + 80) ]) or ((36 + 444 + 553)==(1154 + 233))) then v67=v67 + 1 + 0 ;else v67=v84[150 -(12 + 135) ];end elseif ((v85<=(808 -(334 + 459))) or ((7222 -2530)==(4101 + (417 -121)))) then if ((v85<=12) or (2702<=(263 + 92))) then if ((v85==(24 -13)) or (2377<=(2297 -(866 + (1171 -593))))) then v82[v84[1397 -(1299 + 96) ]]=v36[v84[5 -2 ]];else local v147=0;local v148;local v149;local v150;local v151;while true do if ((3260<(5520 -(131 + 841))) and (v147==1)) then local v240=0 -0 ;while true do if (((2282 + 1849)<=(13378 -8682)) and (1==v240)) then v147=2;break;end if (((899 + 2346)>=(27 + 25)) and (v240==(0 + 0))) then v150=nil;v151=nil;v240=349 -(189 + 159) ;end end end if (((1213 -(258 + 342))==(1781 -(2378 -(738 + 472)))) and (((0 -0) -0)==v147)) then local v241=1501 -(1033 + 468) ;while true do if (((7009 -2136)<=4885) and (v241==(0 -0))) then v148=0 + 0 ;v149=nil;v241=536 -(101 + 434) ;end if ((1016>=(3669 -(11411 -8754))) and (v241==(333 -(279 + 53)))) then v147=2 -1 ;break;end end end if ((v147==(1826 -(629 + 1195))) or (545<=(908 -(276 + 462)))) then while true do if (((1334 -(1230 + 104))==v148) or ((1711 -1110)>=(3063 -(44 + 669)))) then local v271=1268 -(1254 + 14) ;while true do if ((v271==(1 + 0)) or ((18 + 9)>=(2959 -(943 + 190)))) then v148=837 -(352 + 484) ;break;end if ((79<(1091 -(337 + 466))) and (v271==(882 -(299 + 583)))) then v149=v84[7 -5 ];v150=v82[v149];v271=1 + 0 ;end end end if ((v148==(3 -2)) or ((444 + 3852)<=(270 -160))) then v151=v82[v149 + 2 + 0 ];if ((v151>(0 + 0)) or ((2989 -(195 + 137))<(2998 -(166 + 533)))) then if (((4724 -3242)==(1535 -(29 + 24))) and (v150>v82[v149 + (3 -(8 -6)) ])) then v67=v84[1 + 2 ];else v82[v149 + (12 -9) ]=v150;end elseif ((v150<v82[v149 + (3 -2) ]) or ((5114 -(276 + 130))==(56 + 541))) then v67=v84[2 + 1 ];else v82[v149 + (6 -3) ]=v150;end break;end end break;end end end elseif ((2313<3487) and (v85<=(11 + 2))) then local v152=0 -0 ;local v153;local v154;local v155;while true do if ((v152==0) or ((48 + 193)>=(8148 -6095))) then local v242=0 -0 ;while true do if ((v242==(3 -2)) or ((177 + (342 -213))>(3549 -(737 + 576)))) then v152=83 -(53 + 29) ;break;end if (((327 + 74)<=(6113 -(232 + 1214))) and (v242==0)) then v153=0;v154=nil;v242=1 + 0 ;end end end if (((2499 -(292 + 169))>=(178 + 1551)) and (v152==(1 + 0))) then v155=nil;while true do if ((2406<=3381) and (v153==(1 + (1586 -(1341 + 245))))) then for v290=v154 + (3 -2) ,v84[4 -(0 + 0) ] do v155=v155   .. v82[v290] ;end v82[v84[6 -4 ]]=v155;break;end if ((3325>=(390 -223)) and (v153==(596 -(127 + 469)))) then local v274=0;local v275;while true do if ((v274==(482 -(11 + 471))) or (1934<(4046 -2169))) then v275=802 -(552 + 250) ;while true do if ((v275==(3 -2)) or ((2775 + 1385)>(5771 -(920 + 205)))) then v153=1 + 0 ;break;end if (((2304 -1579)==(1008 -283)) and (v275==(0 + 0))) then v154=v84[3 + 0 ];v155=v82[v154];v275=1;end end break;end end end end break;end end elseif ((v85==(11 + 3)) or ((7407 -2608)<(883 -648))) then local v189=336 -(287 + 49) ;local v190;local v191;while true do if ((v189==((2776 -2079) -(167 + (2564 -2034)))) or ((22 + 3085)<(3749 -(818 + 969)))) then local v261=1959 -(610 + 736 + 613) ;while true do if (((1750 -(232 + 100 + 131))<=(693 + 1196 + 1762)) and (v261==(1565 -(909 + 655)))) then v189=3 -2 ;break;end if ((v261==0) or (4929<((5412 -(690 + 1277)) + 605))) then v190=1625 -(1037 + 588) ;v191=nil;v261=1 + 0 ;end end end if ((v189==1) or (((1464 -954) + 3245)>=(4600 -(641 + 25)))) then while true do if ((v190==(1415 -((961 -(28 + 145)) + (1290 -663)))) or (3162<(5626 -3239))) then v191=v84[(3 -1) -0 ];v82[v191](v13(v82,v191 + (1914 -((2584 -834) + 163)) ,v84[3]));break;end end break;end end elseif ((989<=(127 + 1563)) and (v82[v84[2]]==v84[1131 -(1025 + 102) ])) then v67=v67 + 1 + 0 ;else v67=v84[3];end elseif ((v85<=18) or ((4826 -1693)==(2729 -(184 + 1107)))) then if ((v85<=16) or ((42 + 355)>(6530 -(1172 + 772)))) then if (((2950 -2093)==((1767 + 439) -((1063 -402) + 688))) and (v84[557 -(304 + 251) ]==v82[v84[4]])) then v67=v67 + 1 + 0 ;else v67=v84[3];end elseif ((v85>(248 -(91 + 140))) or ((3787 + 1019)==(2129 + 2727))) then v82[v84[2 + 0 ]]();else v82[v84[2]][v84[1433 -(280 + 1150) ]]=v84[645 -(138 + 503) ];end elseif ((v85<=(46 -27)) or ((14208 -10240)==(589 + 2027))) then if ((v84[1 + 1 ]<=v82[v84[3 + 1 ]]) or ((1033 + 730)>=3490)) then v67=v67 + 1 ;else v67=v84[11 -8 ];end elseif ((v85>(10 + 3 + 7)) or ((19002 -14219)<=(39 + 1184))) then local v196=(0 + 0) -0 ;local v197;local v198;local v199;local v200;local v201;local v202;local v203;while true do if ((v196==0) or ((3584 -(842 + 844))<=(548 + 1341))) then v197=0 -0 ;v198=nil;v196=648 -(385 + (1804 -(364 + 1178))) ;end if (((5369 -(151 + 903))>=(2510 -(593 + (312 -(71 + 34))))) and ((1 -0)==v196)) then v199=nil;v200=nil;v196=2;end if (((3 + 0)==v196) or (((7857 -(469 + 861)) -(531 + 1244))==(2391 + 201))) then v203=nil;while true do if ((v197==(1 + 0)) or ((120 + 24)>((1927 -(164 + 9)) + 806))) then local v312=(2066 -(1168 + 734)) -(45 + 119) ;while true do if ((v312==((403 + 421) -(388 + 435))) or (((3620 + 5681) -7035)<=576)) then v197=6 -(9 -5) ;break;end if ((v312==(0 -(0 + 0))) or ((3192 + 1491)<=(1601 -(683 + 543)))) then v200=nil;v201=nil;v312=(987 -(535 + 450)) -1 ;end end end if (((1055 -(46 + 1007))==v197) or ((1903 + 1607)<=(1850 -(2112 -(717 + 159))))) then v202=nil;v203=nil;v197=3;end if ((((6540 -(82 + 956)) -(248 + 747))>((45 -17) + 296)) and (v197==(1815 -(1640 + 175)))) then v198=0 -0 ;v199=nil;v197=1 + 0 ;end if ((v197==(1179 -(312 + 864))) or ((4801 -1468)>(2995 + 1771))) then while true do if (((2687 -(50 + 49 + (387 -(194 + 160))))<=(5243 -(871 + 5))) and (v198==(0 -0))) then local v350=0 + 0 ;local v351;while true do if ((v350==(0 + 0)) or ((355 + (1210 -855))==((1632 + 192) -784))) then v351=0 + 0 ;while true do if ((v351==(3 -2)) or ((5593 -(357 + 483))<3786)) then v198=1;break;end if ((v351==(0 -0)) or ((5209 -(258 + 71))<(2996 -(874 + 451)))) then local v403=0;while true do if ((v403==(3 -2)) or ((3562 -2190)==(12204 -8629))) then v351=1;break;end if (((225 + (3109 -(214 + 1779)))<=(7186 -4159)) and (v403==(0 + 0))) then v199=v84[3 -1 ];v200=v84[3 + 1 ];v403=1;end end end end break;end end end if ((v198==(2 -0)) or ((123 -49)>=(4889 -(38 + 58)))) then local v352=0;while true do if ((v352==(1784 -(118 + 1666))) or ((3440 + 617)<(3933 -2104))) then for v385=58 -(54 + 3 + 0) ,v200 do v82[v201 + v385 ]=v202[v385];end v203=v202[1 + 0 ];v352=1914 -(1603 + 310) ;end if (((608 + 398)<(3972 -(168 + 1011))) and (v352==(2 -1))) then v198=3;break;end end end if ((v198==(3 + 0)) or ((4956 -(890 + 556))<(7624 -5194))) then if (((3064 + 1753)>=((8671 + 681) -(6555 -(508 + 277)))) and v203) then local v367=0;while true do if ((v367==(0 + 0)) or ((4637 -(1117 + 36))<=(4722 -(1105 + 213)))) then v82[v201]=v203;v67=v84[1 + 2 ];break;end end else v67=v67 + 1 + 0 ;end break;end if (((5000 -2634)==(3148 -(392 + 390))) and ((1 -0)==v198)) then local v353=0;local v354;while true do if ((0==v353) or ((4313 -((81 -46) + (101 -60)))==(4205 -(676 + 371)))) then v354=342 -((359 -239) + (1003 -(231 + 550))) ;while true do if (((4100 -(8 + 963))<=(10238 -7098)) and (v354==1)) then v198=1045 -(60 + 983) ;break;end if ((v354==0) or (2596>=3627)) then local v404=0 + 0 ;while true do if ((0==v404) or (((278 + 291) -(203 + 209))>=(12447 -7820))) then v201=v199 + 1 + 1 ;v202={v82[v199](v82[v199 + (1 -0) ],v82[v201])};v404=1574 -(1088 + 485) ;end if ((v404==(916 -(734 + 181))) or ((10658 -6479)<=(1738 + 94))) then v354=1;break;end end end end break;end end end end break;end end break;end if (((87 + 557)<(5557 -3111)) and (v196==(3 -1))) then v201=nil;v202=nil;v196=3;end end else local v204=0;local v205;local v206;local v207;while true do if (((2254 + 1649)>=((5316 -2870) -(717 + 1028))) and (v204==(0 + 0))) then v205=1071 -(883 + 188) ;v206=nil;v204=(1 + 1) -(1 + 0) ;end if (((2629 + 1649)>(8073 -5167)) and (v204==(2 -1))) then v207=nil;while true do if (((1921 -(677 + 609))<(4342 -(738 + 821))) and (v205==(1 + 0))) then while true do if (((6796 -2900)>(4224 -(1567 + 359))) and ((0 + 0)==v206)) then v207=v84[1889 -(1139 + 748) ];v82[v207]=v82[v207](v13(v82,v207 + 1 ,v84[315 -(268 + 44) ]));break;end end break;end if ((v205==0) or (1867>((11957 -5750) -(1149 + 420)))) then v206=1431 -(1273 + 44 + 114) ;v207=nil;v205=1 + 0 ;end end break;end end end elseif (((192 + 272)<2463) and (v85<=(69 -37))) then if ((v85<=(16 + 10)) or (((1631 + 3906) -1453)<=(334 + 2546))) then if (((8979 -(16943 -10343))<2714) and (v85<=(22 + 1))) then if ((v85==(974 -(893 + 59))) or ((4885 -(159 + 420))<(2040 -(892 + 189)))) then v82[v84[939 -(263 + 674) ]]=v82[v84[1094 -(673 + (567 -149)) ]] -v84[8 -4 ] ;else local v157=0;local v158;local v159;local v160;while true do if (((5565 -(1299 + (829 -529)))>((859 + 1549) -875)) and (v157==(1406 -(581 + 825)))) then v158=0 -0 ;v159=nil;v157=1872 -(553 + 1150 + 168) ;end if (((6809 -(529 + 1452))>3505) and (1==v157)) then v160=nil;while true do if ((v158==(1 + (0 -0))) or ((13892 -10365)<=(3480 -((26 -11) + 538)))) then for v291=(2745 -(1298 + 335)) -(808 + (429 -126)) , #v81 do local v292=(253 + 366) -(532 + 87) ;local v293;local v294;while true do if ((v292==(414 -(108 + 305))) or ((5007 -(544 + 759))<(2275 -552))) then while true do if ((((3024 -1000) -((1337 -553) + 967))<=(1019 + 3561)) and (v293==0)) then v294=v81[v291];for v375=714 -(2 + 53 + 659) , #v294 do local v376=0 + 0 ;local v377;local v378;local v379;local v380;while true do if (((143 + 234)>(467 -116)) and (v376==2)) then while true do if (((1551 + 647)<(3942 + 444)) and (v377==(0 -0))) then local v416=1940 -(1681 + 259) ;while true do if (((108 + 924)==(2159 -(549 + 479 + 99))) and (1==v416)) then v377=463 -(9 + 453) ;break;end if (((4284 -(950 + 212))<=(1790 + 2415)) and ((0 + 0)==v416)) then local v422=0 + 0 ;while true do if (((2607 -(416 + (937 -641)))==(2666 -771)) and (v422==1)) then v416=1647 -(1110 + 536) ;break;end if (((952 + 236)==1188) and (v422==(180 -(130 + 50)))) then v378=v294[v375];v379=v378[1 + 0 ];v422=490 -(407 + 82) ;end end end end end if ((v377==(109 -(14 + 94))) or ((2582 -(78 + 767))>=(12153 -7463))) then v380=v378[(2854 -1754) -(864 + 234) ];if (((v379==v82) and (v380>=v159)) or ((9281 -5099)>((6522 + 1740) -3733))) then local v418=0;local v419;local v420;while true do if (((12036 -7199)>(3202 -(484 + 652))) and (1==v418)) then while true do if ((v419==0) or ((165 + 3609)<(68 + 493))) then v420=(0 -0) -0 ;while true do if (((657 -(154 + 157))>=(221 + 111)) and ((0 + 0 + 0)==v420)) then v160[v380]=v379[v380];v378[1]=v160;break;end end break;end end break;end if ((v418==(0 + 0)) or ((8682 -4624)<=((1425 + 1414) -(66 + 3 + 14)))) then v419=883 -((2043 -(745 + 1227)) + 812) ;v420=nil;v418=943 -(865 + 77) ;end end end break;end end break;end if (((1799 + 459)==(200 + 2058)) and (v376==1)) then local v405=0;while true do if ((1991>=(2392 -(761 + 782))) and (v405==(0 + 0))) then v379=nil;v380=nil;v405=1;end if (((435 + 3196)<(3266 + 433)) and (v405==(1671 -(575 + 1095)))) then v376=2;break;end end end if ((v376==(0 -0)) or ((1690 -945)>=(16079 -11573))) then v377=(6 + 540) -(248 + 298) ;v378=nil;v376=2 -1 ;end end end break;end end break;end if (((922 + 3343)>(3381 + 618)) and (v292==(0 + 0))) then v293=0 + 0 ;v294=nil;v292=1;end end end break;end if ((v158==(0 -0)) or ((936 + 419)>=(6146 -(1185 + 45)))) then v159=v84[1420 -(1144 + 274) ];v160={};v158=1 + 0 ;end end break;end end end elseif ((4034==(1575 + 2459)) and (v85<=(12 + 12))) then v82[v84[2]]=v82[v84[1338 -(522 + 813) ]][v82[v84[(8 + 3) -7 ]]];elseif ((v85>(1510 -(1480 + 5))) or (1628>(210 + 321 + 1912))) then local v208=0 -0 ;local v209;local v210;while true do if ((0==v208) or ((6881 -3649)>=(4769 -(879 + 453)))) then local v262=0 -0 ;while true do if (((855 -(163 + 104))<(5959 -(639 + 758))) and (v262==(1223 -(193 + 1030)))) then v209=v84[2];v210=v82[v84[3]];v262=1167 -(62 + 66 + 1038) ;end if (((1 -0)==v262) or ((26 + 1914 + 901)>(542 + 3173))) then v208=345 -(25 + 319) ;break;end end end if ((v208==1) or ((2537 -(876 + 37))>=((17431 -11106) -3343))) then v82[v209 + (1574 -(13 + 1560)) ]=v210;v82[v209]=v210[v84[13 -9 ]];break;end end else local v211=0;local v212;local v213;local v214;local v215;local v216;while true do if (((3975 -(174 + 175))<(9712 -5058)) and (v211==((345 -(131 + 214)) + 0))) then local v266=0;while true do if (((4436 -(67 + 121))>=(5573 -3353)) and (v266==(0 + 0))) then v212=0;v213=nil;v266=1;end if ((206<(13287 -9229)) and ((2 -1)==v266)) then v211=1 + 0 + 0 ;break;end end end if (((5141 -(45 + 47 + 485))>=(168 + (1393 -(169 + 1172)))) and (v211==2)) then v216=nil;while true do if ((0==v212) or ((591 + 2792)<(30 + 1269))) then local v315=0 + 0 ;while true do if ((v315==(1 + 0)) or ((2336 + 134 + 753)<=(4374 -2727))) then v212=110 -(67 + 42) ;break;end if ((v315==(0 + 0)) or ((6014 -(53 + 1485))<=(1467 + 1940))) then local v357=0 -(0 -0) ;while true do if (((1475 -(1006 + 469))==v357) or (((4357 -1622) + 1461)<(6308 -(1854 + 2624)))) then v213=v84[1 + 1 ];v214,v215=v79(v82[v213](v82[v213 + 1 + 0 ]));v357=623 -(111 + 511) ;end if (((6156 -(1448 + 69))>=(551 + 96)) and ((1 -0)==v357)) then v315=1;break;end end end end end if ((v212==(6 -4)) or (3829>=(4961 -(212 + 309)))) then for v331=v213,v68 do local v332=0 -0 ;local v333;while true do if ((v332==(1478 -(536 + 942))) or ((21730 -17115)>=((27315 -20717) -(48 + 1751)))) then v333=1671 -(775 + 896) ;while true do if (((2135 -(1179 + 146 + 227))<(4983 -(556 + 1340))) and (v333==(0 + 0))) then v216=v216 + 1 + 0 ;v82[v331]=v214[v216];break;end end break;end end end break;end if (((7260 -5130)<(2801 + 291)) and (v212==(902 -(794 + 107)))) then local v316=0 + 0 ;local v317;while true do if ((v316==(0 -0)) or ((2985 -(497 + 522))>(7957 -4033))) then v317=1317 -(959 + 358) ;while true do if ((3779>=(614 + 253)) and (v317==1)) then v212=2 -(0 -0) ;break;end if ((v317==(171 -(45 + 126))) or (544>=(1302 + 1815))) then v68=(v215 + v213) -((11 -7) -3) ;v216=0;v317=2 -1 ;end end break;end end end end break;end if (((257 + 172 + 461)>(186 + 237)) and (v211==(164 -(24 + 139)))) then local v267=834 -(260 + 574) ;while true do if (((4906 -3517)<1539) and (v267==(487 -(82 + 404)))) then v211=1 + 1 ;break;end if ((v267==(0 -0)) or (721>=(5516 -(208 + 492 + 596)))) then v214=nil;v215=nil;v267=152 -(54 + 97) ;end end end end end elseif (((317 + 867)==(1890 -(689 + 17))) and (v85<=(62 -33))) then if (((4661 + 279)>(2387 -(1273 + 295))) and (v85<=27)) then local v163=0 -(863 -(181 + 682)) ;local v164;local v165;local v166;local v167;while true do if ((v163==1) or (3323<=690)) then v166=nil;v167=nil;v163=2;end if ((((6 -3) -1)==v163) or (3356==(1488 -(370 + 458)))) then while true do if ((v164==(1 -(0 -0))) or ((8314 -6060)>3653)) then v167={};v166=v10({},{__index=function(v277,v278)local v295=1369 -(253 + 404 + 712) ;local v296;local v297;local v298;while true do if (((333 -217)==116) and (v295==(0 -0))) then v296=1795 -(25 + 1770) ;v297=nil;v295=1 + 0 ;end if (((2779 + 967)<(1016 + 3655)) and (v295==(105 -(58 + 32 + 14)))) then v298=nil;while true do if ((1==v296) or ((4101 -2754)>1568)) then while true do if ((((0 -0) + 0)==v297) or ((62 + 449)>(1051 + 1429))) then local v400=0;local v401;while true do if ((v400==(0 + 0)) or ((7295 -4278)<(3724 -(38 + (2691 -1633))))) then v401=0 -0 ;while true do if (((2145 -1225)>(1633 -(532 + 496))) and ((0 + 0)==v401)) then v298=v167[v278];return v298[1][v298[2 + 0 ]];end end break;end end end end break;end if ((v296==(0 -0)) or ((251 + 1100)>(4919 -(6205 -3634)))) then v297=138 -(110 + 28) ;v298=nil;v296=1 + 0 ;end end break;end end end,__newindex=function(v277,v278,v279)local v299=0;local v300;local v301;while true do if ((v299==0) or (2949==((289 + 1500) -1115))) then local v346=0 + (1030 -(615 + 415)) ;while true do if ((v346==(1766 -(777 + 988))) or ((2946 -(1863 + 24))<=(109 + 886))) then v299=4 -3 ;break;end if ((v346==0) or ((3214 -((3031 -(1077 + 270)) + 72))>=1900)) then v300=(0 -0) + 0 ;v301=nil;v346=1;end end end if (((5959 -3544)<(548 + (2507 -(25 + 251)))) and (v299==(1 + 0 + 0))) then while true do if ((v300==(629 -(74 + 555))) or ((164 + 1180)>(294 + 3406))) then v301=v167[v278];v301[1 + 0 ][v301[3 -1 ]]=v279;break;end end break;end end end});v164=4 -2 ;end if (((169 + 267)<(5285 -(222 + 549))) and (v164==((0 -0) + 0))) then local v280=0 + 0 ;while true do if ((v280==(0 + 0)) or ((2614 -(9 + 806))<(1131 + 278))) then v165=v77[v84[13 -10 ]];v166=nil;v280=385 -(61 + 170 + 153) ;end if (((3150 + 1488)==(6481 -(90 + 421 + 1332))) and (v280==(2 -1))) then v164=1 + 0 ;break;end end end if ((v164==(1 + 1)) or (3066<(1487 -1104))) then for v302=1 + 0 ,v84[1 + 3 ] do local v303=0 + 0 ;local v304;while true do if (((3833 + (1553 -(276 + 589)))>(1608 + 2185)) and (v303==(0 -0))) then local v347=0 + 0 ;while true do if (((1 + 0)==v347) or ((2538 -685)>(4315 -(785 + 230)))) then v303=1;break;end if ((v347==(0 -0)) or ((81 + 1561)==(18625 -14868))) then v67=v67 + (2 -1) ;v304=v76[v67];v347=254 -(230 + 23) ;end end end if ((v303==(3 -2)) or ((82 + 74)>=(6309 -2851))) then if ((v304[1 + 0 + 0 ]==(21 + 7)) or (2286<=(3066 -(533 + 258)))) then v167[v302-(492 -((2228 -(525 + 1352)) + 140)) ]={v82,v304[(6 + 4) -7 ]};else v167[v302-(569 -(5 + 286 + 277)) ]={v36,v304[2 + 1 ]};end v81[ #v81 + (2 -1) + 0 ]=v167;break;end end end v82[v84[2]]=v30(v165,v166,v37);break;end end break;end if ((v163==(1502 -(1450 + 52))) or ((17975 -13190)==(1216 + 1483))) then v164=0;v165=nil;v163=3 -2 ;end end elseif ((v85>(92 -64)) or ((382 + 298)>(7214 -3872))) then local v217=0;local v218;local v219;local v220;local v221;while true do if ((v217==(1684 -(644 + 1040))) or (1017>(5473 -(78 + (4917 -3171))))) then v218=693 -((1720 -(186 + 1524)) + 683) ;v219=nil;v217=1 + 0 ;end if ((1==v217) or ((108 -56)>=(1374 + 619))) then v220=nil;v221=nil;v217=1060 -((1066 -(95 + 516)) + 603) ;end if ((v217==(494 -(241 + 251))) or ((3385 + (2157 -740))<(5838 -2270))) then while true do if ((v218==(1 -0)) or ((5476 -(63 + 1669))>=(4372 + (1347 -(423 + 367))))) then v221=0 + 0 ;for v335=v219,v84[3 + 1 ] do local v336=(963 + 862) -(148 + (3013 -(763 + 573))) ;local v337;while true do if ((500<((1232 -727) + 2146)) and (v336==(471 -(439 + 32)))) then v337=0 + 0 + 0 ;while true do if ((v337==0) or (((8071 + 2142) -5374)==4425)) then v221=v221 + (2 -1) ;v82[v335]=v220[v221];break;end end break;end end end break;end if ((v218==(353 -(131 + 222))) or (1186<=(434 + 584))) then v219=v84[9 -7 ];v220={v82[v219](v13(v82,v219 + 1 + 0 ,v68))};v218=1;end end break;end end else v82[v84[3 -1 ]]=v82[v84[2 + 1 ]];end elseif ((v85<=(5 + 25)) or ((2638 -(1040 + 778))<=100)) then if ((742<(2147 + 108)) and (v82[v84[4 -2 ]]~=v84[7 -(5 -2) ])) then v67=v67 + 1 + 0 ;else v67=v84[11 -8 ];end elseif ((v85==(74 -43)) or (4596<3067)) then local v225=0;local v226;while true do if ((v225==(0 + 0)) or ((1251 -604)>(6720 -1738))) then v226=v84[171 -(33 + 136) ];v82[v226](v82[v226 + 1 + 0 ]);break;end end else local v227=0;local v228;local v229;while true do if ((v227==(0 + 0 + 0)) or ((7956 -5652)<(2131 -(291 + 360)))) then v228=0 -0 ;v229=nil;v227=1;end if (((5792 -(94 + 1157))>2399) and (v227==(1 + 0))) then while true do if (((3 + 18 + 123)<=(6187 -3998)) and (v228==(0 + 0))) then v229=v84[2];v68=(v229 + v83) -(2 -1) ;v228=422 -(39 + 311 + 71) ;end if ((((43455 -34625) -6489)<3754) and (v228==1)) then for v338=v229,v68 do local v339=0 + 0 ;local v340;local v341;while true do if (((894 + 1741)<(211 + 4236)) and (v339==0)) then local v362=0 -(0 -0) ;while true do if ((1482==(1035 + 447)) and (v362==(0 -0))) then v340=1842 -(93 + 1749) ;v341=nil;v362=1412 -(307 + 1104) ;end if (((2525 -(665 + 790))<2445) and (v362==(2 -1))) then v339=1 -0 ;break;end end end if (((69 + 34)<(2047 -(51 + 20))) and (v339==1)) then while true do if (((3294 -(638 + (2301 -(119 + 1847))))==(8961 -6640)) and (v340==(0 -0))) then v341=v80[v338-v229 ];v82[v338]=v341;break;end end break;end end end break;end end break;end end end elseif ((2249>=(1945 -(1018 + 890))) and (v85<=(172 -135))) then if ((v85<=(1145 -(699 + 412))) or ((3454 -(1262 + 446))==((3000 -(168 + 12)) -(687 + 335)))) then if ((4562>(3550 -(1311 + 615))) and (v85==(15 + 18))) then do return v82[v84[2 -0 ]];end else local v168=959 -(299 + 660) ;local v169;local v170;while true do if (((476 + 1207)<3924) and ((1 + 0)==v168)) then while true do if ((v169==(230 -(48 + 182))) or (((6998 + 16555) -18558)<(16110 -12334))) then v170=v84[2];v82[v170]=v82[v170](v82[v170 + 1 + 0 ]);break;end end break;end if ((4699<=(14120 -9151)) and (v168==(76 -(6 + 70)))) then v169=(0 -0) -0 ;v170=nil;v168=1 + 0 ;end end end elseif ((((10960 -(540 + 885)) -6540)>((4596 -2484) -(733 + (4180 -3043)))) and (v85<=(9 + 26))) then local v171=0 -0 ;local v172;local v173;while true do if (((224 + 112)<(6528 -(1104 + 656))) and (v171==1)) then while true do if (((1549 -(915 + 156 + 478))==v172) or (1361>=(346 + 2230))) then v173=v84[954 -((2015 -1455) + 392) ];do return v13(v82,v173,v68);end break;end end break;end if ((1680<=(10486 -8126)) and (v171==(0 + 0 + 0))) then local v243=0 -0 ;while true do if (((376 -(51 + 68))<(148 + 3988)) and (v243==1)) then v171=(465 -(177 + 287)) + 0 ;break;end if ((v243==(0 + 0)) or (2975<=(2927 -933))) then v172=513 -(6 + 33 + 474) ;v173=nil;v243=2 -1 ;end end end end elseif ((v85>36) or ((4145 -(886 + 1009))<(2938 -(553 + 546)))) then local v230=0;local v231;local v232;while true do if (((7692 -4939)>(2433 -(59 + 1))) and (v230==(0 -0))) then v231=0 + 0 ;v232=nil;v230=1 + 0 ;end if ((1==v230) or ((10891 -7820)<=(798 + 238))) then while true do if (((1534 -(2797 -1756))==(904 -411)) and ((0 + 0)==v231)) then v232=v84[2];v82[v232]=v82[v232](v13(v82,v232 + ((2036 -951) -(719 + (533 -168))) ,v68));break;end end break;end end else local v233=0 -0 ;local v234;local v235;while true do if ((v233==((1796 -(130 + 140)) -(108 + 87 + 1330))) or ((8831 -4103)==(7233 -2916))) then while true do if ((0==v234) or ((9950 -5905)>=(5728 -(374 + 1228)))) then v235=v84[3 -1 ];do return v82[v235](v13(v82,v235 + (1827 -(8 + 1733 + 85)) ,v68));end break;end end break;end if ((3510>=(4952 -2940)) and (v233==(0 + 0))) then v234=1096 -(1062 + 34) ;v235=nil;v233=1167 -(474 + 692) ;end end end elseif ((v85<=40) or ((1010 + 2835)==2243)) then if ((v85<=38) or ((3252 -(209 + 395))>(4818 -(674 + 78)))) then v82[v84[1 + 1 ]]={};elseif ((v85>(1218 -(822 + 357))) or (((7589 -3806) -(1565 + 119))<(1350 + 153))) then for v244=v84[2],v84[87 -((378 -(28 + 288)) + 22) ] do v82[v244]=nil;end else v82[v84[2]][v84[3]]=v82[v84[9 -5 ]];end elseif ((v85<=(83 -42)) or ((6865 -4765)==(5009 -(77 + 956)))) then v82[v84[1 + 1 ]][v82[v84[1 + 0 + 2 ]]]=v84[(7192 -5541) -(485 + 1162) ];elseif (((4011 -(268 + 631))==(4220 -(2996 -(1141 + 747)))) and (v85>42)) then v82[v84[640 -(443 + 195) ]]=v84[14 -11 ];elseif (((6681 -3918)==(1126 + 1637)) and v82[v84[1 + 1 ]]) then v67=v67 + (860 -(344 + 515)) ;else v67=v84[7 -4 ];end v67=v67 + 1 + 0 ;break;end if (((4110 -(324 + 1591))<=((11277 -8326) -(129 + 75))) and (v91==0)) then v84=v76[v67];v85=v84[2 -1 ];v91=1410 -(964 + 397 + 48) ;end end break;end end end end A,B=v28(v11(v71));if  not A[1] then local v92=v35[4][v67] or "?" ;error("Script error at ["   .. v92   .. "]:"   .. A[2] );else return v13(A,2,B);end end;end;return v30(v29(),{},v17)(...);end if (v18==3) then v25=function()local v58=v24();local v59=v24();local v60=1 -0 ;local v61=(v21(v59,29 -(12 + 16) ,163 -(112 + 31) ) * ((8 -6)^32)) + v58 ;local v62=v21(v59,21,(5277 -4072) -(761 + 413) );local v63=((v21(v59,26 + 5 + 1 )==(1869 -(79 + 1789))) and  -(1 + 0)) or (1 + 0) ;if (v62==(878 -(508 + 370))) then if (v61==(1116 -(862 + 254))) then return v63 * (0 + 0) ;else v62=1;v60=(1102 -(425 + 677)) + 0 ;end elseif (v62==(399 + 209 + 1439)) then return ((v61==(0 -0)) and (v63 * (1/0))) or (v63 * NaN) ;end return v8(v63,v62-(1571 -(504 + 44)) ) * (v60 + (v61/((1947 -(1740 + 205))^52))) ;end;v26=nil;v26=function(v38)local v64=0 -0 ;local v65;local v66;while true do if (v64==(0 + 0)) then v65=nil;if  not v38 then v38=v24();if (v38==(0 + 0)) then return "";end end v64=20 -(5 + 14) ;end if ((7 -5)==v64) then v66={};for v108=(1 + 0) -0 , #v65 do v66[v108]=v2(v1(v3(v65,v108,v108)));end v64=(1 + 6) -4 ;end if (v64==(1109 -(1006 + 100))) then return v6(v66);end if (v64==(1 + 0)) then v65=v3(v16,v19,(v19 + v38) -(2 -1) );v19=v19 + v38 ;v64=3 -1 ;end end end;v27=v24;v18=4;end end end vv9(),...);end
